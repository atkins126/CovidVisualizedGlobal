{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/Users/farshadpourmalek/Downloads/CovidVisualizedGlobal-main/20220104/code/JOHN/log CovidVisualizedGlobal JOHN.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 5 Jan 2022, 16:56:16
{txt}
{com}. 
. ***************************************************************************
. * This is "do CovidVisualizedGlobal JOHN.do"
. 
. * Project: Combine and visualize international periodically updating 
. * estimates of COVID-19 at the global level (CovidVisualizedGlobal)
. * Person: Farshad Pourmalek pourmalek_farshad at yahoo dot com
. * Time (initial): 2021-04-14
. ***************************************************************************
. 
. 
. 
. 
. ****************************************
. ****************************************
. 
. * get Johns Hopkins data for deaths
. 
. 
. import delimited ///
> "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv" ///
> , clear varnames(1) colrange(1:2)
{res}{text}(2 vars, 280 obs)

{com}. 
. save "time_series_covid19_deaths_global col 2.dta", replace
{txt}file time_series_covid19_deaths_global col 2.dta saved

{com}. 
. 
. import delimited ///
> "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv" ///
> , clear varnames(1) colrange(5)
{res}{text}(714 vars, 280 obs)

{com}. 
. save "time_series_covid19_deaths_global col 5 on.dta", replace
{txt}file time_series_covid19_deaths_global col 5 on.dta saved

{com}. 
. 
. use "time_series_covid19_deaths_global col 2.dta", clear 
{txt}
{com}. 
. merge 1:1 _n using "time_series_covid19_deaths_global col 5 on.dta"
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             280{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. drop _merge
{txt}
{com}. 
. order provincestate countryregion, last
{txt}
{com}. 
. count
  {res}280
{txt}
{com}. 
. qui destring v*, replace
{txt}
{com}. 
. collapse (sum) v*, by(countryregion) // sum to add subnational estimates to national level and omit subnational estimates
{txt}
{com}. 
. count
  {res}196
{txt}
{com}. 
. replace countryregion = trim(countryregion)
{txt}(0 real changes made)

{com}. 
. rename countryregion loc_grand_name
{res}{txt}
{com}. 
. label var loc_grand_name loc_grand_name
{txt}
{com}. 
. 
. gen counter = _n
{txt}
{com}. 
. reshape long v, i(counter) 
{txt}(note: j

Data{col 36}wide{col 43}->{col 48}long
{hline 77}
Number of obs.                 {res}     196   {txt}->{res}  139944
{txt}Number of variables            {res}     716   {txt}->{res}       4
{txt}j variable (714 values)                   ->   {res}_j
{txt}xij variables:
                         {res}v1 v2 ... v714   {txt}->   {res}v
{txt}{hline 77}

{com}. 
. rename v TotDeaMeRaA00S00
{res}{txt}
{com}. 
. label var TotDeaMeRaA00S00 "Total deaths raw A00 JOHN"
{txt}
{com}. 
. bysort loc_grand_name: gen DayDeaMeRaA00S00 =  TotDeaMeRaA00S00[_n] - TotDeaMeRaA00S00[_n-1]
{txt}(196 missing values generated)

{com}. 
. label var DayDeaMeRaA00S00 "Daily deaths raw A00 JOHN"
{txt}
{com}. 
. 
. * JOHN starts from 22 Jan 2020
. 
. gen date = date("22 Jan 2020", "DMY")
{txt}
{com}. 
. bysort loc_grand_name: replace date = date + _j - 1
{txt}(139,748 real changes made)

{com}. 
. format date %td
{txt}
{com}. 
. codebook date

{txt}{hline}
{res}date{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric daily date ({res}float{txt})

{col 18}range:  [{res}21936{txt},{res}22649{txt}]{col 55}units:  {res}1
{col 8}{txt}or equivalently:  [{res}22jan2020{txt},{res}04jan2022{txt}]{col 55}units:  {res}days
{col 10}{txt}unique values:  {res}714{col 51}{txt}missing .:  {res}0{txt}/{res}139,944

{txt}{col 19}mean:{res}{col 26} 22292.5{txt} = {res}12jan2021{txt} (+ 12 hours)
{col 15}std. dev:{res}{col 26} 206.115

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}   22007{col 37}   22114{col 47} 22292.5{col 57}   22471{col 67}   22578
{col 26}02apr2020{col 36}18jul2020{col 46}12jan2021{col 56}10jul2021{col 66}25oct2021
{txt}
{com}. 
. drop counter _j
{txt}
{com}. 
. save "all JOHN deaths.dta", replace
{txt}file all JOHN deaths.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. 
. *****************************
. 
. * gen global sum
. 
. use "all JOHN deaths.dta", clear 
{txt}
{com}. 
. collapse (sum) TotDeaMeRaA00S00, by(date)
{txt}
{com}. 
. label var TotDeaMeRaA00S00 "Total deaths raw A00 JOHN"
{txt}
{com}. 
. gen DayDeaMeRaA00S00 =  TotDeaMeRaA00S00[_n] - TotDeaMeRaA00S00[_n-1]
{txt}(1 missing value generated)

{com}. 
. label var DayDeaMeRaA00S00 "Daily deaths raw A00 JOHN"
{txt}
{com}. 
. gen loc_grand_name = " GLOBAL"
{txt}
{com}. 
. order loc_grand_name date DayDeaMeRaA00S00 TotDeaMeRaA00S00
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. save "JOHN deaths GLOBAL.dta", replace
{txt}file JOHN deaths GLOBAL.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. *****************************
. 
. * gen AFRO
. 
. use "all JOHN deaths.dta", clear 
{txt}
{com}. 
. keep if ///
> loc_grand_name == "Algeria" | ///
> loc_grand_name == "Angola" | ///
> loc_grand_name == "Benin" | ///
> loc_grand_name == "Botswana" | ///
> loc_grand_name == "Burkina Faso" | ///
> loc_grand_name == "Burundi" | ///
> loc_grand_name == "Cabo Verde" | ///
> loc_grand_name == "Cameroon" | ///
> loc_grand_name == "Central African Republic" | ///
> loc_grand_name == "Chad" | ///
> loc_grand_name == "Comoros" | ///
> loc_grand_name == "Congo (Brazzaville)" | ///
> loc_grand_name == "Congo (Kinshasa)" | ///
> loc_grand_name == "Cote d'Ivoire" | ///
> loc_grand_name == "Equatorial Guinea" | ///
> loc_grand_name == "Eritrea" | ///
> loc_grand_name == "Eswatini" | ///
> loc_grand_name == "Ethiopia" | ///
> loc_grand_name == "Gabon" | ///
> loc_grand_name == "Gambia" | ///
> loc_grand_name == "Ghana" | ///
> loc_grand_name == "Guinea" | ///
> loc_grand_name == "Guinea-Bissau" | ///
> loc_grand_name == "Kenya" | ///
> loc_grand_name == "Lesotho" | ///
> loc_grand_name == "Liberia" | ///
> loc_grand_name == "Madagascar" | ///
> loc_grand_name == "Malawi" | ///
> loc_grand_name == "Mali" | ///
> loc_grand_name == "Mauritania" | ///
> loc_grand_name == "Mauritius" | ///
> loc_grand_name == "Mozambique" | ///
> loc_grand_name == "Namibia" | ///
> loc_grand_name == "Niger" | ///
> loc_grand_name == "Nigeria" | ///
> loc_grand_name == "Rwanda" | ///
> loc_grand_name == "Sao Tome and Principe" | ///
> loc_grand_name == "Senegal" | ///
> loc_grand_name == "Seychelles" | ///
> loc_grand_name == "Sierra Leone" | ///
> loc_grand_name == "South Africa" | ///
> loc_grand_name == "South Sudan" | ///
> loc_grand_name == "Tanzania" | ///
> loc_grand_name == "Togo" | ///
> loc_grand_name == "Uganda" | ///
> loc_grand_name == "Zambia" | ///
> loc_grand_name == "Zimbabwe" 
{txt}(106,386 observations deleted)

{com}. 
. 
. drop loc_grand_name
{txt}
{com}.  
. collapse (sum) TotDeaMeRaA00S00 DayDeaMeRaA00S00, by(date)
{txt}
{com}. 
. label var TotDeaMeRaA00S00 "Total deaths raw A00 JOHN"
{txt}
{com}. 
. label var DayDeaMeRaA00S00 "Daily deaths raw A00 JOHN"
{txt}
{com}. 
. gen loc_grand_name = "AFRO"
{txt}
{com}. 
. order loc_grand_name date DayDeaMeRaA00S00 TotDeaMeRaA00S00
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. save "JOHN deaths AFRO.dta", replace
{txt}file JOHN deaths AFRO.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. 
. *****************************
. 
. * gen AMRO
. 
. use "all JOHN deaths.dta", clear 
{txt}
{com}. 
. keep if ///
> loc_grand_name == "Antigua and Barbuda" | ///
> loc_grand_name == "Argentina" | ///
> loc_grand_name == "Bahamas" | ///
> loc_grand_name == "Barbados" | ///
> loc_grand_name == "Belize" | ///
> loc_grand_name == "Bolivia" | ///
> loc_grand_name == "Brazil" | ///
> loc_grand_name == "Canada" | ///
> loc_grand_name == "Chile" | ///
> loc_grand_name == "Colombia" | ///
> loc_grand_name == "Costa Rica" | ///
> loc_grand_name == "Cuba" | ///
> loc_grand_name == "Diamond Princess" | ///
> loc_grand_name == "Dominica" | ///
> loc_grand_name == "Dominican Republic" | ///
> loc_grand_name == "Ecuador" | ///
> loc_grand_name == "El Salvador" | ///
> loc_grand_name == "Grenada" | ///
> loc_grand_name == "Guatemala" | ///
> loc_grand_name == "Guyana" | ///
> loc_grand_name == "Haiti" | ///
> loc_grand_name == "Honduras" | ///
> loc_grand_name == "Jamaica" | ///
> loc_grand_name == "Mexico" | ///
> loc_grand_name == "MS Zaandam" | ///
> loc_grand_name == "Nicaragua" | ///
> loc_grand_name == "Panama" | ///
> loc_grand_name == "Paraguay" | ///
> loc_grand_name == "Peru" | ///
> loc_grand_name == "Saint Kitts and Nevis" | ///
> loc_grand_name == "Saint Lucia" | ///
> loc_grand_name == "Saint Vincent and the Grenadines" | ///
> loc_grand_name == "Suriname" | ///
> loc_grand_name == "Trinidad and Tobago" | ///
> loc_grand_name == "Uruguay" | ///
> loc_grand_name == "US" | ///
> loc_grand_name == "Venezuela" 
{txt}(113,526 observations deleted)

{com}. 
. 
. drop loc_grand_name
{txt}
{com}.  
. collapse (sum) TotDeaMeRaA00S00 DayDeaMeRaA00S00, by(date)
{txt}
{com}. 
. label var TotDeaMeRaA00S00 "Total deaths raw A00 JOHN"
{txt}
{com}. 
. label var DayDeaMeRaA00S00 "Daily deaths raw A00 JOHN"
{txt}
{com}. 
. gen loc_grand_name = "AMRO"
{txt}
{com}. 
. order loc_grand_name date DayDeaMeRaA00S00 TotDeaMeRaA00S00
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. save "JOHN deaths AMRO.dta", replace
{txt}file JOHN deaths AMRO.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. *****************************
. 
. * gen EMRO
. 
. use "all JOHN deaths.dta", clear 
{txt}
{com}. 
. keep if ///
> loc_grand_name == "Afghanistan" | ///
> loc_grand_name == "Bahrain" | ///
> loc_grand_name == "Djibouti" | ///
> loc_grand_name == "Egypt" | ///
> loc_grand_name == "Iran" | ///
> loc_grand_name == "Iraq" | ///
> loc_grand_name == "Jordan" | ///
> loc_grand_name == "Kuwait" | ///
> loc_grand_name == "Lebanon" | ///
> loc_grand_name == "Libya" | ///
> loc_grand_name == "Morocco" | ///
> loc_grand_name == "Oman" | ///
> loc_grand_name == "Pakistan" | ///
> loc_grand_name == "Qatar" | ///
> loc_grand_name == "Saudi Arabia" | ///
> loc_grand_name == "Somalia" | ///
> loc_grand_name == "Sudan" | ///
> loc_grand_name == "Syria" | ///
> loc_grand_name == "Tunisia" | ///
> loc_grand_name == "United Arab Emirates" | ///
> loc_grand_name == "West Bank and Gaza" | ///
> loc_grand_name == "Yemen" 
{txt}(124,236 observations deleted)

{com}. 
. 
. drop loc_grand_name
{txt}
{com}.  
. collapse (sum) TotDeaMeRaA00S00 DayDeaMeRaA00S00, by(date)
{txt}
{com}. 
. label var TotDeaMeRaA00S00 "Total deaths raw A00 JOHN"
{txt}
{com}. 
. label var DayDeaMeRaA00S00 "Daily deaths raw A00 JOHN"
{txt}
{com}. 
. gen loc_grand_name = "EMRO"
{txt}
{com}. 
. order loc_grand_name date DayDeaMeRaA00S00 TotDeaMeRaA00S00
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. save "JOHN deaths EMRO.dta", replace
{txt}file JOHN deaths EMRO.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. *****************************
. 
. * gen EURO
. 
. use "all JOHN deaths.dta", clear 
{txt}
{com}. 
. keep if ///
> loc_grand_name == "Albania" | ///
> loc_grand_name == "Andorra" | ///
> loc_grand_name == "Armenia" | ///
> loc_grand_name == "Austria" | ///
> loc_grand_name == "Azerbaijan" | ///
> loc_grand_name == "Belarus" | ///
> loc_grand_name == "Belgium" | ///
> loc_grand_name == "Bosnia and Herzegovina" | ///
> loc_grand_name == "Bulgaria" | ///
> loc_grand_name == "Croatia" | ///
> loc_grand_name == "Cyprus" | ///
> loc_grand_name == "Czechia" | ///
> loc_grand_name == "Denmark" | ///
> loc_grand_name == "Estonia" | ///
> loc_grand_name == "Finland" | ///
> loc_grand_name == "France" | ///
> loc_grand_name == "Georgia" | ///
> loc_grand_name == "Germany" | ///
> loc_grand_name == "Greece" | ///
> loc_grand_name == "Holy See" | ///
> loc_grand_name == "Hungary" | ///
> loc_grand_name == "Iceland" | ///
> loc_grand_name == "Ireland" | ///
> loc_grand_name == "Israel" | ///
> loc_grand_name == "Italy" | ///
> loc_grand_name == "Kazakhstan" | ///
> loc_grand_name == "Kosovo" | ///
> loc_grand_name == "Kyrgyzstan" | ///
> loc_grand_name == "Latvia" | ///
> loc_grand_name == "Liechtenstein" | ///
> loc_grand_name == "Lithuania" | ///
> loc_grand_name == "Luxembourg" | ///
> loc_grand_name == "Malta" | ///
> loc_grand_name == "Moldova" | ///
> loc_grand_name == "Monaco" | ///
> loc_grand_name == "Montenegro" | ///
> loc_grand_name == "Netherlands" | ///
> loc_grand_name == "North Macedonia" | ///
> loc_grand_name == "Norway" | ///
> loc_grand_name == "Poland" | ///
> loc_grand_name == "Portugal" | ///
> loc_grand_name == "Romania" | ///
> loc_grand_name == "Russia" | ///
> loc_grand_name == "San Marino" | ///
> loc_grand_name == "Serbia" | ///
> loc_grand_name == "Slovakia" | ///
> loc_grand_name == "Slovenia" | ///
> loc_grand_name == "Spain" | ///
> loc_grand_name == "Sweden" | ///
> loc_grand_name == "Switzerland" | ///
> loc_grand_name == "Tajikistan" | ///
> loc_grand_name == "Turkey" | ///
> loc_grand_name == "Ukraine" | ///
> loc_grand_name == "United Kingdom" | ///
> loc_grand_name == "Uzbekistan"
{txt}(100,674 observations deleted)

{com}. 
. drop loc_grand_name
{txt}
{com}.  
. collapse (sum) TotDeaMeRaA00S00 DayDeaMeRaA00S00, by(date)
{txt}
{com}. 
. label var TotDeaMeRaA00S00 "Total deaths raw A00 JOHN"
{txt}
{com}. 
. label var DayDeaMeRaA00S00 "Daily deaths raw A00 JOHN"
{txt}
{com}. 
. gen loc_grand_name = "EURO"
{txt}
{com}. 
. order loc_grand_name date DayDeaMeRaA00S00 TotDeaMeRaA00S00
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. save "JOHN deaths EURO.dta", replace
{txt}file JOHN deaths EURO.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. 
. *****************************
. 
. * gen SEARO
. 
. use "all JOHN deaths.dta", clear 
{txt}
{com}. 
. keep if ///
> loc_grand_name == "Bangladesh" | ///
> loc_grand_name == "Bhutan" | ///
> loc_grand_name == "Burma" | ///
> loc_grand_name == "India" | ///
> loc_grand_name == "Indonesia" | ///
> loc_grand_name == "Maldives" | ///
> loc_grand_name == "Nepal" | ///
> loc_grand_name == "Sri Lanka" | ///
> loc_grand_name == "Thailand" | ///
> loc_grand_name == "Timor-Leste" 
{txt}(132,804 observations deleted)

{com}. 
. 
. drop loc_grand_name
{txt}
{com}.  
. collapse (sum) TotDeaMeRaA00S00 DayDeaMeRaA00S00, by(date)
{txt}
{com}. 
. label var TotDeaMeRaA00S00 "Total deaths raw A00 JOHN"
{txt}
{com}. 
. label var DayDeaMeRaA00S00 "Daily deaths raw A00 JOHN"
{txt}
{com}. 
. gen loc_grand_name = "SEARO"
{txt}
{com}. 
. order loc_grand_name date DayDeaMeRaA00S00 TotDeaMeRaA00S00
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. save "JOHN deaths SEARO.dta", replace
{txt}file JOHN deaths SEARO.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. *****************************
. 
. * gen WPRO
. 
. use "all JOHN deaths.dta", clear 
{txt}
{com}. 
. keep if ///
> loc_grand_name == "Australia" | ///
> loc_grand_name == "Brunei" | ///
> loc_grand_name == "Cambodia" | ///
> loc_grand_name == "China" | ///
> loc_grand_name == "Fiji" | ///
> loc_grand_name == "Japan" | ///
> loc_grand_name == "Kiribati" | ///
> loc_grand_name == "Korea, South" | ///
> loc_grand_name == "Laos" | ///
> loc_grand_name == "Malaysia" | ///
> loc_grand_name == "Marshall Islands" | ///
> loc_grand_name == "Micronesia" | ///
> loc_grand_name == "Mongolia" | ///
> loc_grand_name == "New Zealand" | ///
> loc_grand_name == "Palau" | ///
> loc_grand_name == "Papua New Guinea" | ///
> loc_grand_name == "Philippines" | ///
> loc_grand_name == "Samoa" | ///
> loc_grand_name == "Singapore" | ///
> loc_grand_name == "Solomon Islands" | ///
> loc_grand_name == "Summer Olympics 2020" | ///
> loc_grand_name == "Taiwan*" | ///
> loc_grand_name == "Tonga" | ///
> loc_grand_name == "Vanuatu" | ///
> loc_grand_name == "Vietnam" 
{txt}(122,094 observations deleted)

{com}. 
. 
. drop loc_grand_name
{txt}
{com}.  
. collapse (sum) TotDeaMeRaA00S00 DayDeaMeRaA00S00, by(date)
{txt}
{com}. 
. label var TotDeaMeRaA00S00 "Total deaths raw A00 JOHN"
{txt}
{com}. 
. label var DayDeaMeRaA00S00 "Daily deaths raw A00 JOHN"
{txt}
{com}. 
. gen loc_grand_name = "WPRO"
{txt}
{com}. 
. order loc_grand_name date DayDeaMeRaA00S00 TotDeaMeRaA00S00
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. save "JOHN deaths WPRO.dta", replace
{txt}file JOHN deaths WPRO.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. ****************************************
. ****************************************
. 
. * get Johns Hopkins data for cases
. 
. 
. import delimited ///
> "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv" ///
> , clear varnames(1) colrange(1:2)
{res}{text}(2 vars, 280 obs)

{com}. 
. save "time_series_covid19_confirmed_global col 2.dta", replace
{txt}file time_series_covid19_confirmed_global col 2.dta saved

{com}. 
. 
. import delimited ///
> "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv" ///
> , clear varnames(1) colrange(5)
{res}{text}(714 vars, 280 obs)

{com}. 
. save "time_series_covid19_confirmed_global col 5 on.dta", replace
{txt}file time_series_covid19_confirmed_global col 5 on.dta saved

{com}. 
. 
. use "time_series_covid19_confirmed_global col 2.dta", clear 
{txt}
{com}. 
. merge 1:1 _n using "time_series_covid19_confirmed_global col 5 on.dta"
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             280{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. drop _merge
{txt}
{com}. 
. order provincestate countryregion, last
{txt}
{com}. 
. count
  {res}280
{txt}
{com}. 
. qui destring v*, replace
{txt}
{com}. 
. collapse (sum) v*, by(countryregion) // sum to add subnational estimates to national level and omit subnational estimates
{txt}
{com}. 
. count
  {res}196
{txt}
{com}. 
. replace countryregion = trim(countryregion)
{txt}(0 real changes made)

{com}. 
. rename countryregion loc_grand_name
{res}{txt}
{com}. 
. label var loc_grand_name loc_grand_name
{txt}
{com}. 
. isid loc_grand_name
{txt}
{com}. 
. 
. gen counter = _n
{txt}
{com}. 
. reshape long v, i(counter) 
{txt}(note: j = 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714)

Data{col 36}wide{col 43}->{col 48}long
{hline 77}
Number of obs.                 {res}     196   {txt}->{res}  139944
{txt}Number of variables            {res}     716   {txt}->{res}       4
{txt}j variable (714 values)                   ->   {res}_j
{txt}xij variables:
                         {res}v1 v2 ... v714   {txt}->   {res}v
{txt}{hline 77}

{com}. 
. rename v TotCasMeRaA00S00
{res}{txt}
{com}. 
. label var TotCasMeRaA00S00 "Total cases raw A00 JOHN"
{txt}
{com}. 
. bysort loc_grand_name: gen DayCasMeRaA00S00 =  TotCasMeRaA00S00[_n] - TotCasMeRaA00S00[_n-1]
{txt}(196 missing values generated)

{com}. 
. label var DayCasMeRaA00S00 "Daily cases raw A00 JOHN"
{txt}
{com}. 
. 
. * JOHN starts from 22 Jan 2020
. 
. gen date = date("22 Jan 2020", "DMY")
{txt}
{com}. 
. bysort loc_grand_name: replace date = date + _j - 1
{txt}(139,748 real changes made)

{com}. 
. format date %td
{txt}
{com}. 
. codebook date

{txt}{hline}
{res}date{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric daily date ({res}float{txt})

{col 18}range:  [{res}21936{txt},{res}22649{txt}]{col 55}units:  {res}1
{col 8}{txt}or equivalently:  [{res}22jan2020{txt},{res}04jan2022{txt}]{col 55}units:  {res}days
{col 10}{txt}unique values:  {res}714{col 51}{txt}missing .:  {res}0{txt}/{res}139,944

{txt}{col 19}mean:{res}{col 26} 22292.5{txt} = {res}12jan2021{txt} (+ 12 hours)
{col 15}std. dev:{res}{col 26} 206.115

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}   22007{col 37}   22114{col 47} 22292.5{col 57}   22471{col 67}   22578
{col 26}02apr2020{col 36}18jul2020{col 46}12jan2021{col 56}10jul2021{col 66}25oct2021
{txt}
{com}. 
. drop counter _j
{txt}
{com}. 
. save "all JOHN cases.dta", replace
{txt}file all JOHN cases.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. *****************************
. 
. * gen global sum
. 
. use "all JOHN cases.dta", clear 
{txt}
{com}. 
. collapse (sum) TotCasMeRaA00S00, by(date)
{txt}
{com}. 
. label var TotCasMeRaA00S00 "Total cases raw A00 JOHN"
{txt}
{com}. 
. gen DayCasMeRaA00S00 =  TotCasMeRaA00S00[_n] - TotCasMeRaA00S00[_n-1]
{txt}(1 missing value generated)

{com}. 
. label var DayCasMeRaA00S00 "Daily deacasesths raw A00 JOHN"
{txt}
{com}. 
. gen loc_grand_name = " GLOBAL"
{txt}
{com}. 
. order loc_grand_name date DayCasMeRaA00S00 TotCasMeRaA00S00
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. save "JOHN cases GLOBAL.dta", replace
{txt}file JOHN cases GLOBAL.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. 
. *****************************
. 
. * gen AFRO
. 
. use "all JOHN cases.dta", clear 
{txt}
{com}. 
. keep if ///
> loc_grand_name == "Algeria" | ///
> loc_grand_name == "Angola" | ///
> loc_grand_name == "Benin" | ///
> loc_grand_name == "Botswana" | ///
> loc_grand_name == "Burkina Faso" | ///
> loc_grand_name == "Burundi" | ///
> loc_grand_name == "Cabo Verde" | ///
> loc_grand_name == "Cameroon" | ///
> loc_grand_name == "Central African Republic" | ///
> loc_grand_name == "Chad" | ///
> loc_grand_name == "Comoros" | ///
> loc_grand_name == "Congo (Brazzaville)" | ///
> loc_grand_name == "Congo (Kinshasa)" | ///
> loc_grand_name == "Cote d'Ivoire" | ///
> loc_grand_name == "Equatorial Guinea" | ///
> loc_grand_name == "Eritrea" | ///
> loc_grand_name == "Eswatini" | ///
> loc_grand_name == "Ethiopia" | ///
> loc_grand_name == "Gabon" | ///
> loc_grand_name == "Gambia" | ///
> loc_grand_name == "Ghana" | ///
> loc_grand_name == "Guinea" | ///
> loc_grand_name == "Guinea-Bissau" | ///
> loc_grand_name == "Kenya" | ///
> loc_grand_name == "Lesotho" | ///
> loc_grand_name == "Liberia" | ///
> loc_grand_name == "Madagascar" | ///
> loc_grand_name == "Malawi" | ///
> loc_grand_name == "Mali" | ///
> loc_grand_name == "Mauritania" | ///
> loc_grand_name == "Mauritius" | ///
> loc_grand_name == "Mozambique" | ///
> loc_grand_name == "Namibia" | ///
> loc_grand_name == "Niger" | ///
> loc_grand_name == "Nigeria" | ///
> loc_grand_name == "Rwanda" | ///
> loc_grand_name == "Sao Tome and Principe" | ///
> loc_grand_name == "Senegal" | ///
> loc_grand_name == "Seychelles" | ///
> loc_grand_name == "Sierra Leone" | ///
> loc_grand_name == "South Africa" | ///
> loc_grand_name == "South Sudan" | ///
> loc_grand_name == "Tanzania" | ///
> loc_grand_name == "Togo" | ///
> loc_grand_name == "Uganda" | ///
> loc_grand_name == "Zambia" | ///
> loc_grand_name == "Zimbabwe" 
{txt}(106,386 observations deleted)

{com}. 
. 
. drop loc_grand_name
{txt}
{com}.  
. collapse (sum) TotCasMeRaA00S00 DayCasMeRaA00S00, by(date)
{txt}
{com}. 
. label var TotCasMeRaA00S00 "Total cases raw A00 JOHN"
{txt}
{com}. 
. label var DayCasMeRaA00S00 "Daily cases raw A00 JOHN"
{txt}
{com}. 
. gen loc_grand_name = "AFRO"
{txt}
{com}. 
. order loc_grand_name date DayCasMeRaA00S00 TotCasMeRaA00S00
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. save "JOHN cases AFRO.dta", replace
{txt}file JOHN cases AFRO.dta saved

{com}. 
. 
. 
. 
. 
. 
. *****************************
. 
. * gen AMRO
. 
. use "all JOHN cases.dta", clear 
{txt}
{com}. 
. keep if ///
> loc_grand_name == "Antigua and Barbuda" | ///
> loc_grand_name == "Argentina" | ///
> loc_grand_name == "Bahamas" | ///
> loc_grand_name == "Barbados" | ///
> loc_grand_name == "Belize" | ///
> loc_grand_name == "Bolivia" | ///
> loc_grand_name == "Brazil" | ///
> loc_grand_name == "Canada" | ///
> loc_grand_name == "Chile" | ///
> loc_grand_name == "Colombia" | ///
> loc_grand_name == "Costa Rica" | ///
> loc_grand_name == "Cuba" | ///
> loc_grand_name == "Diamond Princess" | ///
> loc_grand_name == "Dominica" | ///
> loc_grand_name == "Dominican Republic" | ///
> loc_grand_name == "Ecuador" | ///
> loc_grand_name == "El Salvador" | ///
> loc_grand_name == "Grenada" | ///
> loc_grand_name == "Guatemala" | ///
> loc_grand_name == "Guyana" | ///
> loc_grand_name == "Haiti" | ///
> loc_grand_name == "Honduras" | ///
> loc_grand_name == "Jamaica" | ///
> loc_grand_name == "Mexico" | ///
> loc_grand_name == "MS Zaandam" | ///
> loc_grand_name == "Nicaragua" | ///
> loc_grand_name == "Panama" | ///
> loc_grand_name == "Paraguay" | ///
> loc_grand_name == "Peru" | ///
> loc_grand_name == "Saint Kitts and Nevis" | ///
> loc_grand_name == "Saint Lucia" | ///
> loc_grand_name == "Saint Vincent and the Grenadines" | ///
> loc_grand_name == "Suriname" | ///
> loc_grand_name == "Trinidad and Tobago" | ///
> loc_grand_name == "Uruguay" | ///
> loc_grand_name == "US" | ///
> loc_grand_name == "Venezuela" 
{txt}(113,526 observations deleted)

{com}. 
. 
. drop loc_grand_name
{txt}
{com}.  
. collapse (sum) TotCasMeRaA00S00 DayCasMeRaA00S00, by(date)
{txt}
{com}. 
. label var TotCasMeRaA00S00 "Total cases raw A00 JOHN"
{txt}
{com}. 
. label var DayCasMeRaA00S00 "Daily cases raw A00 JOHN"
{txt}
{com}. 
. gen loc_grand_name = "AMRO"
{txt}
{com}. 
. order loc_grand_name date DayCasMeRaA00S00 TotCasMeRaA00S00
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. save "JOHN cases AMRO.dta", replace
{txt}file JOHN cases AMRO.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. *****************************
. 
. * gen EMRO
. 
. use "all JOHN cases.dta", clear 
{txt}
{com}. 
. keep if ///
> loc_grand_name == "Afghanistan" | ///
> loc_grand_name == "Bahrain" | ///
> loc_grand_name == "Djibouti" | ///
> loc_grand_name == "Egypt" | ///
> loc_grand_name == "Iran" | ///
> loc_grand_name == "Iraq" | ///
> loc_grand_name == "Jordan" | ///
> loc_grand_name == "Kuwait" | ///
> loc_grand_name == "Lebanon" | ///
> loc_grand_name == "Libya" | ///
> loc_grand_name == "Morocco" | ///
> loc_grand_name == "Oman" | ///
> loc_grand_name == "Pakistan" | ///
> loc_grand_name == "Qatar" | ///
> loc_grand_name == "Saudi Arabia" | ///
> loc_grand_name == "Somalia" | ///
> loc_grand_name == "Sudan" | ///
> loc_grand_name == "Syria" | ///
> loc_grand_name == "Tunisia" | ///
> loc_grand_name == "United Arab Emirates" | ///
> loc_grand_name == "West Bank and Gaza" | ///
> loc_grand_name == "Yemen" 
{txt}(124,236 observations deleted)

{com}. 
. 
. drop loc_grand_name
{txt}
{com}.  
. collapse (sum) TotCasMeRaA00S00 DayCasMeRaA00S00, by(date)
{txt}
{com}. 
. label var TotCasMeRaA00S00 "Total cases raw A00 JOHN"
{txt}
{com}. 
. label var DayCasMeRaA00S00 "Daily cases raw A00 JOHN"
{txt}
{com}. 
. gen loc_grand_name = "EMRO"
{txt}
{com}. 
. order loc_grand_name date DayCasMeRaA00S00 TotCasMeRaA00S00
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. save "JOHN cases EMRO.dta", replace
{txt}file JOHN cases EMRO.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. 
. *****************************
. 
. * gen EURO
. 
. use "all JOHN cases.dta", clear 
{txt}
{com}. 
. keep if ///
> loc_grand_name == "Albania" | ///
> loc_grand_name == "Andorra" | ///
> loc_grand_name == "Armenia" | ///
> loc_grand_name == "Austria" | ///
> loc_grand_name == "Azerbaijan" | ///
> loc_grand_name == "Belarus" | ///
> loc_grand_name == "Belgium" | ///
> loc_grand_name == "Bosnia and Herzegovina" | ///
> loc_grand_name == "Bulgaria" | ///
> loc_grand_name == "Croatia" | ///
> loc_grand_name == "Cyprus" | ///
> loc_grand_name == "Czechia" | ///
> loc_grand_name == "Denmark" | ///
> loc_grand_name == "Estonia" | ///
> loc_grand_name == "Finland" | ///
> loc_grand_name == "France" | ///
> loc_grand_name == "Georgia" | ///
> loc_grand_name == "Germany" | ///
> loc_grand_name == "Greece" | ///
> loc_grand_name == "Holy See" | ///
> loc_grand_name == "Hungary" | ///
> loc_grand_name == "Iceland" | ///
> loc_grand_name == "Ireland" | ///
> loc_grand_name == "Israel" | ///
> loc_grand_name == "Italy" | ///
> loc_grand_name == "Kazakhstan" | ///
> loc_grand_name == "Kosovo" | ///
> loc_grand_name == "Kyrgyzstan" | ///
> loc_grand_name == "Latvia" | ///
> loc_grand_name == "Liechtenstein" | ///
> loc_grand_name == "Lithuania" | ///
> loc_grand_name == "Luxembourg" | ///
> loc_grand_name == "Malta" | ///
> loc_grand_name == "Moldova" | ///
> loc_grand_name == "Monaco" | ///
> loc_grand_name == "Montenegro" | ///
> loc_grand_name == "Netherlands" | ///
> loc_grand_name == "North Macedonia" | ///
> loc_grand_name == "Norway" | ///
> loc_grand_name == "Poland" | ///
> loc_grand_name == "Portugal" | ///
> loc_grand_name == "Romania" | ///
> loc_grand_name == "Russia" | ///
> loc_grand_name == "San Marino" | ///
> loc_grand_name == "Serbia" | ///
> loc_grand_name == "Slovakia" | ///
> loc_grand_name == "Slovenia" | ///
> loc_grand_name == "Spain" | ///
> loc_grand_name == "Sweden" | ///
> loc_grand_name == "Switzerland" | ///
> loc_grand_name == "Tajikistan" | ///
> loc_grand_name == "Turkey" | ///
> loc_grand_name == "Ukraine" | ///
> loc_grand_name == "United Kingdom" | ///
> loc_grand_name == "Uzbekistan"
{txt}(100,674 observations deleted)

{com}. 
. 
. drop loc_grand_name
{txt}
{com}.  
. collapse (sum) TotCasMeRaA00S00 DayCasMeRaA00S00, by(date)
{txt}
{com}. 
. label var TotCasMeRaA00S00 "Total cases raw A00 JOHN"
{txt}
{com}. 
. label var DayCasMeRaA00S00 "Daily cases raw A00 JOHN"
{txt}
{com}. 
. gen loc_grand_name = "EURO"
{txt}
{com}. 
. order loc_grand_name date DayCasMeRaA00S00 TotCasMeRaA00S00
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. save "JOHN cases EURO.dta", replace
{txt}file JOHN cases EURO.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. *****************************
. 
. * gen SEARO
. 
. use "all JOHN cases.dta", clear 
{txt}
{com}. 
. keep if ///
> loc_grand_name == "Bangladesh" | ///
> loc_grand_name == "Bhutan" | ///
> loc_grand_name == "Burma" | ///
> loc_grand_name == "India" | ///
> loc_grand_name == "Indonesia" | ///
> loc_grand_name == "Maldives" | ///
> loc_grand_name == "Nepal" | ///
> loc_grand_name == "Sri Lanka" | ///
> loc_grand_name == "Thailand" | ///
> loc_grand_name == "Timor-Leste" 
{txt}(132,804 observations deleted)

{com}. 
. 
. drop loc_grand_name
{txt}
{com}.  
. collapse (sum) TotCasMeRaA00S00 DayCasMeRaA00S00, by(date)
{txt}
{com}. 
. label var TotCasMeRaA00S00 "Total cases raw A00 JOHN"
{txt}
{com}. 
. label var DayCasMeRaA00S00 "Daily cases raw A00 JOHN"
{txt}
{com}. 
. gen loc_grand_name = "SEARO"
{txt}
{com}. 
. order loc_grand_name date DayCasMeRaA00S00 TotCasMeRaA00S00
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. save "JOHN cases SEARO.dta", replace
{txt}file JOHN cases SEARO.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. *****************************
. 
. * gen WPRO
. 
. use "all JOHN cases.dta", clear 
{txt}
{com}. 
. keep if ///
> loc_grand_name == "Australia" | ///
> loc_grand_name == "Brunei" | ///
> loc_grand_name == "Cambodia" | ///
> loc_grand_name == "China" | ///
> loc_grand_name == "Fiji" | ///
> loc_grand_name == "Japan" | ///
> loc_grand_name == "Kiribati" | ///
> loc_grand_name == "Korea, South" | ///
> loc_grand_name == "Laos" | ///
> loc_grand_name == "Malaysia" | ///
> loc_grand_name == "Marshall Islands" | ///
> loc_grand_name == "Micronesia" | ///
> loc_grand_name == "Mongolia" | ///
> loc_grand_name == "New Zealand" | ///
> loc_grand_name == "Palau" | ///
> loc_grand_name == "Papua New Guinea" | ///
> loc_grand_name == "Philippines" | ///
> loc_grand_name == "Samoa" | ///
> loc_grand_name == "Singapore" | ///
> loc_grand_name == "Solomon Islands" | ///
> loc_grand_name == "Summer Olympics 2020" | ///
> loc_grand_name == "Taiwan*" | ///
> loc_grand_name == "Tonga" | ///
> loc_grand_name == "Vanuatu" | ///
> loc_grand_name == "Vietnam" 
{txt}(122,094 observations deleted)

{com}. 
. 
. drop loc_grand_name
{txt}
{com}.  
. collapse (sum) TotCasMeRaA00S00 DayCasMeRaA00S00, by(date)
{txt}
{com}. 
. label var TotCasMeRaA00S00 "Total cases raw A00 JOHN"
{txt}
{com}. 
. label var DayCasMeRaA00S00 "Daily cases raw A00 JOHN"
{txt}
{com}. 
. gen loc_grand_name = "WPRO"
{txt}
{com}. 
. order loc_grand_name date DayCasMeRaA00S00 TotCasMeRaA00S00
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. save "JOHN cases WPRO.dta", replace
{txt}file JOHN cases WPRO.dta saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. ****************************************
. ****************************************
. 
. * merge deaths and cases
. 
. local list GLOBAL AFRO AMRO EMRO EURO SEARO WPRO
{txt}
{com}. 
. foreach region of local list {c -(}
{txt}  2{com}. 
.         use "JOHN deaths `region'.dta", clear 
{txt}  3{com}. 
.         merge 1:1 date using "JOHN Cases `region'.dta"
{txt}  4{com}.         
.         drop _merge
{txt}  5{com}. 
.         save "JOHN `region'.dta", replace 
{txt}  6{com}. 
. {c )-}
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             714{txt}  (_merge==3)
{col 5}{hline 41}
file JOHN GLOBAL.dta saved
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             714{txt}  (_merge==3)
{col 5}{hline 41}
file JOHN AFRO.dta saved
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             714{txt}  (_merge==3)
{col 5}{hline 41}
file JOHN AMRO.dta saved
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             714{txt}  (_merge==3)
{col 5}{hline 41}
file JOHN EMRO.dta saved
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             714{txt}  (_merge==3)
{col 5}{hline 41}
file JOHN EURO.dta saved
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             714{txt}  (_merge==3)
{col 5}{hline 41}
file JOHN SEARO.dta saved
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             714{txt}  (_merge==3)
{col 5}{hline 41}
file JOHN WPRO.dta saved

{com}. *
. 
. 
. 
. 
. 
. * append regions
. 
. use "JOHN GLOBAL.dta", clear 
{txt}
{com}. 
. local list AFRO AMRO EMRO EURO SEARO WPRO
{txt}
{com}. 
. foreach region of local list {c -(}
{txt}  2{com}. 
.         append using "JOHN `region'.dta"
{txt}  3{com}.         
. {c )-}
{txt}{p 0 7 2}
(note: variable
DayCasMeRaA00S00 was 
float, now double to accommodate using data's values)
{p_end}

{com}. *
. 
. 
. order loc_grand_name date DayDeaMeRaA00S00 TotDeaMeRaA00S00 DayCasMeRaA00S00 TotCasMeRaA00S00
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. save "JOHN GLOBAL and REGIONAL.dta", replace 
{txt}file JOHN GLOBAL and REGIONAL.dta saved

{com}. 
. 
. 
. 
. * gen cfr
. 
. gen DayCfrMeRaA00S00 = 100 * DayDeaMeRaA00S00 / DayCasMeRaA00S00
{txt}(104 missing values generated)

{com}. 
. label var DayCfrMeRaA00S00 "Daily CFR raw JOHN"
{txt}
{com}. 
. 
. 
. 
. 
. *************************
. 
. * to visualize timing of deaths and cases peaks
. 
. summ DayDeaMeRaA00S00 

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
DayDeaMeR~00 {c |}{res}      4,997    2184.345    3081.649      -1315      20714
{txt}
{com}. gen DayDeMMeRaA00S00 = r(mean)
{txt}
{com}. label var DayDeMMeRaA00S00 "Daily deaths raw mean JOHN DayDeM"
{txt}
{com}. 
. summ DayCasMeRaA00S00 

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
DayCasMeR~00 {c |}{res}      4,997    118168.5    187395.1    -267043    2610888
{txt}
{com}. gen DayCaMMeRaA00S00 = r(mean)
{txt}
{com}. label var DayCaMMeRaA00S00 "Daily cases raw mean JOHN DayCaM"
{txt}
{com}. 
. gen DayCbDMeRaA00S00 = DayCaMMeRaA00S00 / DayDeMMeRaA00S00
{txt}
{com}. label var DayCbDMeRaA00S00 "Daily cases mean div by daily deaths mean JOHN DayCbD"
{txt}
{com}. summ DayCbDMeRaA00S00 

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
DayCbDMeR~00 {c |}{res}      4,998    54.09792           0   54.09792   54.09792
{txt}
{com}. 
. gen DayDeaMeRaA00multip = DayDeaMeRaA00S00 * DayCbDMeRaA00S00 
{txt}(1 missing value generated)

{com}. label var DayDeaMeRaA00multip "Daily deaths scaled (times means of cases by deaths) only for visualization JOHN"
{txt}
{com}. summ DayDeaMeRaA00multip

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
DayDeaMeRa~p {c |}{res}      4,997    118168.5    166710.8  -71138.76    1120584
{txt}
{com}. 
.         
. 
. 
. ******************
. 
. * smooth 
. 
. encode loc_grand_name, gen(loc_grand_name_encoded)
{txt}
{com}. 
. tsset loc_grand_name_encoded date, daily   
{res}{txt}{col 8}panel variable:  {res}loc_grand_name_encoded (strongly balanced)
{txt}{col 9}time variable:  {res}{col 25}date, 22jan2020 to 04jan2022
{txt}{col 17}delta:  {res}1 day
{txt}
{com}. 
. 
. tssmooth ma DayDeaMeRaA00S00_window = DayDeaMeRaA00S00 if DayDeaMeRaA00S00 >= 0, window(3 1 3) 
{txt}The smoother applied was
{res}{p 5 5 5} by loc_grand_name_encoded : (1/7)*[x(t-3) + x(t-2) + x(t-1) + 1*x(t) + x(t+1) + x(t+2) + x(t+3)]; x(t)= DayDeaMeRaA00S00 {p_end}
{txt}
{com}. 
. tssmooth ma DayDeaMeSmA00S00 = DayDeaMeRaA00S00_window, weights( 1 2 3 <4> 3 2 1) replace
{txt}The smoother applied was
{res}{p 5 5 5} by loc_grand_name_encoded : (1/16)*[1*x(t-3) + 2*x(t-2) + 3*x(t-1) + 4*x(t) + 3*x(t+1) + 2*x(t+2) + ...; x(t)= DayDeaMeRaA00S00_window
{txt}
{smcl}
{com}. 
. label var DayDeaMeSmA00S00 "Daily deaths smooth A00 JOHN"
{txt}
{com}. 
. drop DayDeaMeRaA00S00_window
{txt}
{com}. 
. 
. tssmooth ma DayCasMeRaA00S00_window = DayCasMeRaA00S00 if DayCasMeRaA00S00 >= 0, window(3 1 3)
{txt}The smoother applied was
{res}{p 5 5 5} by loc_grand_name_encoded : (1/7)*[x(t-3) + x(t-2) + x(t-1) + 1*x(t) + x(t+1) + x(t+2) + x(t+3)]; x(t)= DayCasMeRaA00S00 {p_end}
{txt}
{com}. 
. tssmooth ma DayCasMeSmA00S00 = DayCasMeRaA00S00_window, weights( 1 2 3 <4> 3 2 1) replace
{txt}The smoother applied was
{res}{p 5 5 5} by loc_grand_name_encoded : (1/16)*[1*x(t-3) + 2*x(t-2) + 3*x(t-1) + 4*x(t) + 3*x(t+1) + 2*x(t+2) + ...; x(t)= DayCasMeRaA00S00_window
{txt}
{smcl}
{com}. 
. label var DayCasMeSmA00S00 "Daily cases smooth A00 JOHN"
{txt}
{com}. 
. drop DayCasMeRaA00S00_window
{txt}
{com}. 
. 
. tssmooth ma DayCfrMeRaA00S00_window = DayCfrMeRaA00S00 if DayCfrMeRaA00S00 >= 0, window(3 1 3)
{txt}The smoother applied was
{res}{p 5 5 5} by loc_grand_name_encoded : (1/7)*[x(t-3) + x(t-2) + x(t-1) + 1*x(t) + x(t+1) + x(t+2) + x(t+3)]; x(t)= DayCfrMeRaA00S00 {p_end}
{txt}
{com}. 
. tssmooth ma DayCfrMeSmA00S00 = DayCfrMeRaA00S00_window, weights( 1 2 3 <4> 3 2 1) replace
{txt}The smoother applied was
{res}{p 5 5 5} by loc_grand_name_encoded : (1/16)*[1*x(t-3) + 2*x(t-2) + 3*x(t-1) + 4*x(t) + 3*x(t+1) + 2*x(t+2) + ...; x(t)= DayCfrMeRaA00S00_window
{txt}
{smcl}
{com}. 
. label var DayCfrMeSmA00S00 "Daily CFR smooth A00 JOHN"
{txt}
{com}. 
. drop DayCfrMeRaA00S00_window
{txt}
{com}. 
. 
. tssmooth ma DayDeaMeRaA00multip_window = DayDeaMeRaA00multip if DayDeaMeRaA00multip >= 0, window(3 1 3)
{txt}The smoother applied was
{res}{p 5 5 5} by loc_grand_name_encoded : (1/7)*[x(t-3) + x(t-2) + x(t-1) + 1*x(t) + x(t+1) + x(t+2) + x(t+3)]; x(t)= DayDeaMeRaA00multip {p_end}
{txt}
{com}. 
. tssmooth ma DayDeaMeSmA00multip = DayDeaMeRaA00multip_window, weights( 1 2 3 <4> 3 2 1) replace
{txt}The smoother applied was
{res}{p 5 5 5} by loc_grand_name_encoded : (1/16)*[1*x(t-3) + 2*x(t-2) + 3*x(t-1) + 4*x(t) + 3*x(t+1) + 2*x(t+2) + ...; x(t)= DayDeaMeRaA00multip_window
{txt}
{smcl}
{com}. 
. label var DayDeaMeSmA00multip "Daily deaths scaled smooth A00 JOHN"
{txt}
{com}. 
. drop DayDeaMeRaA00multip_window
{txt}
{com}. 
. 
. 
. tsset, clear
{txt}
{com}. 
. 
. 
. 
. *
. 
. 
. * gen vars by location 
. 
. foreach var of varlist DayDeaMeRaA00S00 TotDeaMeRaA00S00 DayCasMeRaA00S00 TotCasMeRaA00S00 DayCfrMeRaA00S00 ///
> DayDeMMeRaA00S00 DayCaMMeRaA00S00 DayCbDMeRaA00S00 DayDeaMeRaA00multip DayDeaMeSmA00S00 ///
> DayCasMeSmA00S00 DayCfrMeSmA00S00 DayDeaMeSmA00multip {c -(}
{txt}  2{com}. 
. 
. qui gen `var'AFRO = `var' 
{txt}  3{com}. qui replace `var'AFRO = . if loc_grand_name != "AFRO"
{txt}  4{com}. 
. qui gen `var'AMRO = `var'
{txt}  5{com}. qui replace `var'AMRO = . if loc_grand_name != "AMRO"
{txt}  6{com}. 
. qui gen `var'EMRO = `var'
{txt}  7{com}. qui replace `var'EMRO = . if loc_grand_name != "EMRO"
{txt}  8{com}. 
. qui gen `var'EURO = `var'
{txt}  9{com}. qui replace `var'EURO = . if loc_grand_name != "EURO"
{txt} 10{com}. 
. qui gen `var'GLOBAL = `var'
{txt} 11{com}. qui replace `var'GLOBAL = . if loc_grand_name != " GLOBAL"
{txt} 12{com}. 
. qui gen `var'SEARO = `var'
{txt} 13{com}. qui replace `var'SEARO = . if loc_grand_name != "SEARO"
{txt} 14{com}. 
. qui gen `var'WPRO = `var'
{txt} 15{com}. qui replace `var'WPRO = . if loc_grand_name != "WPRO"
{txt} 16{com}. 
. 
. label var `var'AFRO "`var' AFRO"
{txt} 17{com}. label var `var'AMRO "`var' AMRO"
{txt} 18{com}. label var `var'EMRO "`var' EMRO"
{txt} 19{com}. label var `var'EURO "`var' EURO"
{txt} 20{com}. label var `var'GLOBAL "`var' GLOBAL"
{txt} 21{com}. label var `var'SEARO "`var' SEARO"
{txt} 22{com}. label var `var'WPRO "`var' WPRO"
{txt} 23{com}. 
.                 
. {c )-}
{txt}
{com}. *
. 
. 
. 
. 
. 
. order loc_grand_name date DayDeaMeRaA00S00 TotDeaMeRaA00S00 DayCasMeRaA00S00 TotCasMeRaA00S00
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. save "CovidVisualizedGlobal JOHN.dta", replace
{txt}file CovidVisualizedGlobal JOHN.dta saved

{com}. 
. 
. ***************************************
. 
. * graphs
. 
. 
. grstyle init
{res}{txt}
{com}. 
. grstyle color background white
{txt}
{com}. 
. 
. 
. *******************************
. 
. * regions separate
. 
. 
. local list GLOBAL AFRO AMRO EMRO EURO SEARO WPRO
{txt}
{com}. 
. foreach region of local list {c -(}
{txt}  2{com}. 
. 
. 
.         * daily deaths
.         
.         twoway ///
>         (line DayDeaMeRaA00S00`region' date, sort lcolor(gray)) ///
>         (line DayDeaMeSmA00S00`region' date, sort lwidth(thick) lcolor(red)) ///
>         , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
>         xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
>         ytitle(Daily deaths) title("COVID-19 daily deaths, `region', Johns Hopkins", size(medium)) ///
>         xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
>         legend(order(1 "Raw" 2 "Smoothed") size(small)) 
{txt}  3{com}.         
.         qui graph save "graph `region' 1 COVID-19 daily deaths, `region', Johns Hopkins.gph", replace
{txt}  4{com}.         qui graph export "graph `region' 1 COVID-19 daily deaths, `region', Johns Hopkins.pdf", replace
{txt}  5{com}.         
.         
.         
.         
.         
.         * daily cases 
.         
.         twoway ///
>         (line DayCasMeRaA00S00`region' date, sort lcolor(gray)) ///
>         (line DayCasMeSmA00S00`region' date, sort lwidth(thick) lcolor(red)) ///
>         , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
>         xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
>         ytitle(Daily cases) title("COVID-19 daily cases, `region', Johns Hopkins", size(medium)) ///
>         xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
>         legend(order(1 "Raw" 2 "Smoothed") size(small)) 
{txt}  6{com}.         
.         qui graph save "graph `region' 2 COVID-19 daily cases, `region', Johns Hopkins.gph", replace
{txt}  7{com}.         qui graph export "graph `region' 2 COVID-19 daily cases, `region', Johns Hopkins.pdf", replace
{txt}  8{com}.         
.         
.         
.         
.         
.         * total deaths
.         
.         twoway ///
>         (line TotDeaMeRaA00S00`region' date, sort lcolor(black)) ///
>         , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
>         xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
>         ytitle(Total deaths) title("COVID-19 total deaths, `region', Johns Hopkins", size(medium)) ///
>         xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) 
{txt}  9{com}.         
.         qui graph save "graph `region' 3 COVID-19 total deaths, `region', Johns Hopkins.gph", replace
{txt} 10{com}.         qui graph export "graph `region' 3 COVID-19 total deaths, `region', Johns Hopkins.pdf", replace
{txt} 11{com}.         
.         
.         
.         
.         
.         * total cases 
.         
.         twoway ///
>         (line TotCasMeRaA00S00`region' date, sort lcolor(black)) ///
>         , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
>         xlabel(, angle(forty_five)) ylabel(, format(%15.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
>         ytitle(Total cases) title("COVID-19 total cases, `region', Johns Hopkins", size(medium)) ///
>         xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) 
{txt} 12{com}.         
.         qui graph save "graph `region' 4 COVID-19 total cases, `region', Johns Hopkins.gph", replace
{txt} 13{com}.         qui graph export "graph `region' 4 COVID-19 total cases, `region', Johns Hopkins.pdf", replace
{txt} 14{com}.         
.         
.         
.         
.         
.         * daily cfr 
.         
.         twoway ///
>         (line DayCfrMeRaA00S00`region' date, sort lcolor(gray)) ///
>         (line DayCfrMeSmA00S00`region' date, sort lwidth(thick) lcolor(red)) ///
>         , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
>         xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
>         ytitle(Daily CFR) title("COVID-19 daily CFR, `region', Johns Hopkins", size(medium)) ///
>         xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
>         legend(order(1 "Raw" 2 "Smoothed") size(small)) 
{txt} 15{com}.         
.         qui graph save "graph `region' 5 COVID-19 daily CFR, `region', Johns Hopkins.gph", replace
{txt} 16{com}.         qui graph export "graph `region' 5 COVID-19 daily CFR, `region', Johns Hopkins.pdf", replace
{txt} 17{com}.         
.         
.         
.         
.         
.         * daily cfr after 2021
.         
.         twoway ///
>         (line DayCfrMeRaA00S00`region' date, sort lcolor(gray)) ///
>         (line DayCfrMeSmA00S00`region' date, sort lwidth(thick) lcolor(red)) ///
>         if date >= td(01jan2021) ///
>         , xtitle(Date) xlabel(#12, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
>         xlabel(, angle(forty_five)) ylabel(, format(%9.1fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
>         ytitle(Daily CFR) title("COVID-19 daily CFR, `region', Johns Hopkins", size(medium)) ///
>         xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
>         subtitle("after 2021-01-01", size(small)) ///
>         legend(order(1 "Raw" 2 "Smoothed") size(small)) 
{txt} 18{com}.         
.         qui graph save "graph `region' 6 COVID-19 daily CFR, `region', Johns Hopkins, 01dec2020 on.gph", replace
{txt} 19{com}.         qui graph export "graph `region' 6 COVID-19 daily CFR, `region', Johns Hopkins, 01dec2020 on.pdf", replace
{txt} 20{com}.         
.         
.         
.         
.         
.         * visualize timing of deaths and cases peaks
.         
.         twoway ///
>         (line DayCasMeRaA00S00`region' date, sort lcolor(blue)) ///
>         (line DayDeaMeRaA00S00`region' date, sort lcolor(red)) ///
>         (line DayDeaMeRaA00multip`region' date, sort lpattern(tight_dot) lcolor(red)) ///
>         if date > td(01jan2020)  ///
>         , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
>         xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
>         ytitle(Daily cases and scaled deaths) title("COVID-19 daily cases and deaths, raw, `region', Johns Hopkins", size(medium)) ///
>         xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none)))  ///
>         legend(order(1 "Daily cases" 2 "Daily deaths" 3 "Daily deaths scaled") rows(1)) ///
>         subtitle("Daily deaths scaled (times means of cases by deaths) only for visualization", size(small))
{txt} 21{com}.         
.         qui graph save "graph `region' 7 COVID-19 daily deaths and cases timing, raw, `region', Johns Hopkins.gph", replace
{txt} 22{com}.         qui graph export "graph `region' 7 COVID-19 daily deaths and cases timing, raw, `region', Johns Hopkins.pdf", replace
{txt} 23{com}.         
.         
.         
.         
.         
.         * visualize timing of deaths and cases peaks
.         
.         twoway ///
>         (line DayCasMeSmA00S00`region' date, sort lcolor(blue)) ///
>         (line DayDeaMeSmA00S00`region' date, sort lcolor(red)) ///
>         (line DayDeaMeSmA00multip`region' date, sort lpattern(tight_dot) lcolor(red)) ///
>         if date > td(01jan2020)  ///
>         , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
>         xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
>         ytitle(Daily cases and scaled deaths) title("COVID-19 daily cases and deaths, smooth, `region', Johns Hopkins", size(medium)) ///
>         xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none)))  ///
>         legend(order(1 "Daily cases" 2 "Daily deaths" 3 "Daily deaths scaled") rows(1)) ///
>         subtitle("Daily deaths scaled (times means of cases by deaths) only for visualization", size(small))
{txt} 24{com}.         
.         qui graph save "graph `region' 8 COVID-19 daily deaths and cases timing, smooth, `region', Johns Hopkins.gph", replace
{txt} 25{com}.         qui graph export "graph `region' 8 COVID-19 daily deaths and cases timing, smooth, `region'obal, Johns Hopkins.pdf", replace
{txt} 26{com}.         
. 
. 
. 
. {c )-}
{res}{txt}
{com}. *
. 
. 
. 
. 
. *******************************
. 
. * regions together
. 
. 
. 
. 
. * daily deaths, with GLOBAL
. 
. twoway ///
> (line DayDeaMeSmA00S00AFRO date, sort lcolor(brown)) ///
> (line DayDeaMeSmA00S00AMRO date, sort lcolor(red)) ///
> (line DayDeaMeSmA00S00EMRO date, sort lcolor(gold)) ///
> (line DayDeaMeSmA00S00EURO date, sort lcolor(green)) ///
> (line DayDeaMeSmA00S00SEARO date, sort lcolor(cyan)) ///
> (line DayDeaMeSmA00S00WPRO date, sort lcolor(blue)) ///
> (line DayDeaMeSmA00S00GLOBAL date, sort lcolor(black) lwidth(thick)) ///
> , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Daily deaths) title("COVID-19 daily deaths, WHO regions, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> legend(order(1 "AFRO" 2 "AMRO" 3 "EMRO" 4 "EURO" 5 "SEARO" 6 "WPRO" 7 "GLOBAL") size(small) rows (2)) ///
> subtitle("with GLOBAL", size(small))
{res}{txt}
{com}. 
. qui graph save "graph 1a COVID-19 daily deaths, regions together, Johns Hopkins.gph", replace
{txt}
{com}. qui graph export "graph 1a COVID-19 daily deaths, regions together, Johns Hopkins.pdf", replace
{txt}
{com}. 
. 
. 
. 
. * daily deaths, without GLOBAL
. 
. twoway ///
> (line DayDeaMeSmA00S00AFRO date, sort lcolor(brown)) ///
> (line DayDeaMeSmA00S00AMRO date, sort lcolor(red)) ///
> (line DayDeaMeSmA00S00EMRO date, sort lcolor(gold)) ///
> (line DayDeaMeSmA00S00EURO date, sort lcolor(green)) ///
> (line DayDeaMeSmA00S00SEARO date, sort lcolor(cyan)) ///
> (line DayDeaMeSmA00S00WPRO date, sort lcolor(blue)) ///
> , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Daily deaths) title("COVID-19 daily deaths, WHO regions, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> legend(order(1 "AFRO" 2 "AMRO" 3 "EMRO" 4 "EURO" 5 "SEARO" 6 "WPRO") size(small) rows (2)) ///
> subtitle("without GLOBAL", size(small))
{res}{txt}
{com}. 
. qui graph save "graph 1b COVID-19 daily deaths, regions together wo global, Johns Hopkins.gph", replace
{txt}
{com}. qui graph export "graph 1b COVID-19 daily deaths, regions together wo global, Johns Hopkins.pdf", replace
{txt}
{com}. 
. 
. 
. 
. * daily cases, with GLOBAL
. 
. twoway ///
> (line DayCasMeSmA00S00AFRO date, sort lcolor(brown)) ///
> (line DayCasMeSmA00S00AMRO date, sort lcolor(red)) ///
> (line DayCasMeSmA00S00EMRO date, sort lcolor(gold)) ///
> (line DayCasMeSmA00S00EURO date, sort lcolor(green)) ///
> (line DayCasMeSmA00S00SEARO date, sort lcolor(cyan)) ///
> (line DayCasMeSmA00S00WPRO date, sort lcolor(blue)) ///
> (line DayCasMeSmA00S00GLOBAL date, sort lcolor(black) lwidth(thick)) ///
> , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Daily cases) title("COVID-19 daily cases, WHO regions, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> legend(order(1 "AFRO" 2 "AMRO" 3 "EMRO" 4 "EURO" 5 "SEARO" 6 "WPRO" 7 "GLOBAL") size(small) rows (2)) ///
> subtitle("with GLOBAL", size(small))
{res}{txt}
{com}. 
. qui graph save "graph 2a COVID-19 daily cases, regions together, Johns Hopkins.gph", replace
{txt}
{com}. qui graph export "graph 2a COVID-19 daily cases, regions together, Johns Hopkins.pdf", replace
{txt}
{com}. 
. 
. 
. 
. * daily cases, without GLOBAL
. 
. twoway ///
> (line DayCasMeSmA00S00AFRO date, sort lcolor(brown)) ///
> (line DayCasMeSmA00S00AMRO date, sort lcolor(red)) ///
> (line DayCasMeSmA00S00EMRO date, sort lcolor(gold)) ///
> (line DayCasMeSmA00S00EURO date, sort lcolor(green)) ///
> (line DayCasMeSmA00S00SEARO date, sort lcolor(cyan)) ///
> (line DayCasMeSmA00S00WPRO date, sort lcolor(blue)) ///
> , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Daily cases) title("COVID-19 daily cases, WHO regions, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> legend(order(1 "AFRO" 2 "AMRO" 3 "EMRO" 4 "EURO" 5 "SEARO" 6 "WPRO") size(small) rows (2)) ///
> subtitle("without GLOBAL", size(small))
{res}{txt}
{com}. 
. qui graph save "graph 2b COVID-19 daily cases, regions together wo global, Johns Hopkins.gph", replace
{txt}
{com}. qui graph export "graph 2b COVID-19 daily cases, regions together wo global, Johns Hopkins.pdf", replace
{txt}
{com}. 
. 
. 
. 
. 
. * total deaths, with GLOBAL
. 
. twoway ///
> (line TotDeaMeRaA00S00AFRO date, sort lcolor(brown)) ///
> (line TotDeaMeRaA00S00AMRO date, sort lcolor(red)) ///
> (line TotDeaMeRaA00S00EMRO date, sort lcolor(gold)) ///
> (line TotDeaMeRaA00S00EURO date, sort lcolor(green)) ///
> (line TotDeaMeRaA00S00SEARO date, sort lcolor(cyan)) ///
> (line TotDeaMeRaA00S00WPRO date, sort lcolor(blue)) ///
> (line TotDeaMeRaA00S00GLOBAL date, sort lcolor(black) lwidth(thick)) ///
> , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Total deaths) title("COVID-19 total deaths, WHO regions, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> legend(order(1 "AFRO" 2 "AMRO" 3 "EMRO" 4 "EURO" 5 "SEARO" 6 "WPRO" 7 "GLOBAL") size(small) rows (2)) ///
> subtitle("with GLOBAL", size(small))
{res}{txt}
{com}. 
. qui graph save "graph 3a COVID-19 total deaths, regions together, Johns Hopkins.gph", replace
{txt}
{com}. qui graph export "graph 3a COVID-19 total deaths, regions together, Johns Hopkins.pdf", replace
{txt}
{com}. 
. 
. 
. * total deaths, without GLOBAL
. 
. twoway ///
> (line TotDeaMeRaA00S00AFRO date, sort lcolor(brown)) ///
> (line TotDeaMeRaA00S00AMRO date, sort lcolor(red)) ///
> (line TotDeaMeRaA00S00EMRO date, sort lcolor(gold)) ///
> (line TotDeaMeRaA00S00EURO date, sort lcolor(green)) ///
> (line TotDeaMeRaA00S00SEARO date, sort lcolor(cyan)) ///
> (line TotDeaMeRaA00S00WPRO date, sort lcolor(blue)) ///
> , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Total deaths) title("COVID-19 total deaths, WHO regions, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> legend(order(1 "AFRO" 2 "AMRO" 3 "EMRO" 4 "EURO" 5 "SEARO" 6 "WPRO") size(small) rows (2)) ///
> subtitle("without GLOBAL", size(small))
{res}{txt}
{com}. 
. qui graph save "graph 3b COVID-19 total deaths, regions together wo global, Johns Hopkins.gph", replace
{txt}
{com}. qui graph export "graph 3b COVID-19 total deaths, regions together wo global, Johns Hopkins.pdf", replace
{txt}
{com}. 
. 
. 
. 
. 
. * total cases, with GLOBAL
. 
. twoway ///
> (line TotCasMeRaA00S00AFRO date, sort lcolor(brown)) ///
> (line TotCasMeRaA00S00AMRO date, sort lcolor(red)) ///
> (line TotCasMeRaA00S00EMRO date, sort lcolor(gold)) ///
> (line TotCasMeRaA00S00EURO date, sort lcolor(green)) ///
> (line TotCasMeRaA00S00SEARO date, sort lcolor(cyan)) ///
> (line TotCasMeRaA00S00WPRO date, sort lcolor(blue)) ///
> (line TotCasMeRaA00S00GLOBAL date, sort lcolor(black) lwidth(thick)) ///
> , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%15.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Total cases) title("COVID-19 total cases, WHO regions, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> legend(order(1 "AFRO" 2 "AMRO" 3 "EMRO" 4 "EURO" 5 "SEARO" 6 "WPRO" 7 "GLOBAL") size(small) rows (2)) ///
> subtitle("with GLOBAL", size(small))
{res}{txt}
{com}. 
. qui graph save "graph 4a COVID-19 total cases, regions together, Johns Hopkins.gph", replace
{txt}
{com}. qui graph export "graph 4a COVID-19 total cases, regions together, Johns Hopkins.pdf", replace
{txt}
{com}. 
. 
. 
. * total cases, without GLOBAL
. 
. twoway ///
> (line TotCasMeRaA00S00AFRO date, sort lcolor(brown)) ///
> (line TotCasMeRaA00S00AMRO date, sort lcolor(red)) ///
> (line TotCasMeRaA00S00EMRO date, sort lcolor(gold)) ///
> (line TotCasMeRaA00S00EURO date, sort lcolor(green)) ///
> (line TotCasMeRaA00S00SEARO date, sort lcolor(cyan)) ///
> (line TotCasMeRaA00S00WPRO date, sort lcolor(blue)) ///
> , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%15.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Total cases) title("COVID-19 total cases, WHO regions, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> legend(order(1 "AFRO" 2 "AMRO" 3 "EMRO" 4 "EURO" 5 "SEARO" 6 "WPRO") size(small) rows (2)) ///
> subtitle("without GLOBAL", size(small))
{res}{txt}
{com}. 
. qui graph save "graph 4b COVID-19 total cases, regions together wo global, Johns Hopkins.gph", replace
{txt}
{com}. qui graph export "graph 4b COVID-19 total cases, regions together wo global, Johns Hopkins.pdf", replace
{txt}
{com}. 
. 
. 
. 
. 
. * daily cfr, with GLOBAL
. 
. twoway ///
> (line DayCfrMeRaA00S00AFRO date, sort lcolor(brown)) ///
> (line DayCfrMeRaA00S00AMRO date, sort lcolor(red)) ///
> (line DayCfrMeRaA00S00EMRO date, sort lcolor(gold)) ///
> (line DayCfrMeRaA00S00EURO date, sort lcolor(green)) ///
> (line DayCfrMeRaA00S00SEARO date, sort lcolor(cyan)) ///
> (line DayCfrMeRaA00S00WPRO date, sort lcolor(blue)) ///
> (line DayCfrMeRaA00S00GLOBAL date, sort lcolor(black) lwidth(thick)) ///
> , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Daily CFR) title("COVID-19 daily cfr, WHO regions, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> legend(order(1 "AFRO" 2 "AMRO" 3 "EMRO" 4 "EURO" 5 "SEARO" 6 "WPRO" 7 "GLOBAL") size(small) rows (2)) ///
> subtitle("with GLOBAL", size(small))
{res}{txt}
{com}. 
. qui graph save "graph 5a COVID-19 daily cfr, regions together, Johns Hopkins.gph", replace
{txt}
{com}. qui graph export "graph 5a COVID-19 daily cfr, regions together, Johns Hopkins.pdf", replace
{txt}
{com}. 
. 
. 
. 
. * daily cfr after 2021, with GLOBAL
. 
. twoway ///
> (line DayCfrMeRaA00S00AFRO date, sort lcolor(brown)) ///
> (line DayCfrMeRaA00S00AMRO date, sort lcolor(red)) ///
> (line DayCfrMeRaA00S00EMRO date, sort lcolor(gold)) ///
> (line DayCfrMeRaA00S00EURO date, sort lcolor(green)) ///
> (line DayCfrMeRaA00S00SEARO date, sort lcolor(cyan)) ///
> (line DayCfrMeRaA00S00WPRO date, sort lcolor(blue)) ///
> (line DayCfrMeRaA00S00GLOBAL date, sort lcolor(black) lwidth(thick)) ///
> if date >= td(01jan2021) ///
> , xtitle(Date) xlabel(#12, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Daily CFR) title("COVID-19 daily cfr, WHO regions, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> legend(order(1 "AFRO" 2 "AMRO" 3 "EMRO" 4 "EURO" 5 "SEARO" 6 "WPRO" 7 "GLOBAL") size(small) rows (2)) ///
> subtitle("after 2021, with GLOBAL", size(small))
{res}{txt}
{com}. 
. qui graph save "graph 6a COVID-19 daily cfr, regions together, Johns Hopkins.gph", replace
{txt}
{com}. qui graph export "graph 6a COVID-19 daily cfr, regions together, Johns Hopkins.pdf", replace
{txt}
{com}. 
. 
. 
. 
. 
. 
. * visualize timing of deaths and cases peaks, with GLOBAL
. 
. twoway ///
> (line DayCasMeSmA00S00AFRO date, sort lpattern(dash) lcolor(brown)) ///
> (line DayDeaMeSmA00multipAFRO date, sort lcolor(brown)) ///
> (line DayCasMeSmA00S00AMRO date, sort lpattern(dash) lcolor(red)) ///
> (line DayDeaMeSmA00multipAMRO date, sort lcolor(red)) ///
> (line DayCasMeSmA00S00EMRO date, sort lpattern(dash) lcolor(gold)) ///
> (line DayDeaMeSmA00multipEMRO date, sort lcolor(gold)) ///
> (line DayCasMeSmA00S00EURO date, sort lpattern(dash) lcolor(green)) ///
> (line DayDeaMeSmA00multipEURO date, sort lcolor(green)) ///
> (line DayCasMeSmA00S00SEARO date, sort lpattern(dash) lcolor(cyan)) ///
> (line DayDeaMeSmA00multipSEARO date, sort lcolor(cyan)) ///
> (line DayCasMeSmA00S00WPRO date, sort lpattern(dash) lcolor(blue)) ///
> (line DayDeaMeSmA00multipWPRO date, sort lcolor(blue)) ///
> (line DayCasMeSmA00S00GLOBAL date, sort lpattern(dash) lcolor(black) lwidth(thick)) ///
> (line DayDeaMeSmA00multipGLOBAL date, sort lcolor(black) lwidth(thick)) ///
> if date > td(01jan2020)  ///
> , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Daily cases and scaled deaths) title("COVID-19 daily cases and deaths, raw, WHO regions, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none)))  ///
> legend(order(2 "AFRO" 4 "AMRO" 6 "EMRO" 8 "EURO" 10 "SEARO" 12 "WPRO" 14 "GLOBAL") rows(2)) ///
> subtitle("Daily deaths scaled (times means of cases by deaths) only for visualization", size(small)) ///
> subtitle("daily cases, solid curves; daily deaths scaled, dashed curves", size(small))
{res}{txt}
{com}. 
. qui graph save "graph 8a COVID-19 daily deaths and cases timing, raw, WHO regions, Johns Hopkins.gph", replace
{txt}
{com}. qui graph export "graph 8a COVID-19 daily deaths and cases timing, raw, WHO regions, Johns Hopkins.pdf", replace
{txt}
{com}. 
. 
. 
. 
. * visualize timing of deaths and cases peaks, without GLOBAL
. 
. twoway ///
> (line DayCasMeSmA00S00AFRO date, sort lpattern(dash) lcolor(brown)) ///
> (line DayDeaMeSmA00multipAFRO date, sort lcolor(brown)) ///
> (line DayCasMeSmA00S00AMRO date, sort lpattern(dash) lcolor(red)) ///
> (line DayDeaMeSmA00multipAMRO date, sort lcolor(red)) ///
> (line DayCasMeSmA00S00EMRO date, sort lpattern(dash) lcolor(gold)) ///
> (line DayDeaMeSmA00multipEMRO date, sort lcolor(gold)) ///
> (line DayCasMeSmA00S00EURO date, sort lpattern(dash) lcolor(green)) ///
> (line DayDeaMeSmA00multipEURO date, sort lcolor(green)) ///
> (line DayCasMeSmA00S00SEARO date, sort lpattern(dash) lcolor(cyan)) ///
> (line DayDeaMeSmA00multipSEARO date, sort lcolor(cyan)) ///
> (line DayCasMeSmA00S00WPRO date, sort lpattern(dash) lcolor(blue)) ///
> (line DayDeaMeSmA00multipWPRO date, sort lcolor(blue)) ///
> if date > td(01jan2020)  ///
> , xtitle(Date) xlabel(#24, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Daily cases and scaled deaths) title("COVID-19 daily cases and deaths, raw, WHO regions, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none)))  ///
> legend(order(2 "AFRO" 4 "AMRO" 6 "EMRO" 8 "EURO" 10 "SEARO" 12 "WPRO") rows(2)) ///
> subtitle("Daily deaths scaled (times means of cases by deaths) only for visualization", size(small)) ///
> subtitle("daily cases, solid curves; daily deaths scaled, dashed curves; without global", size(small))
{res}{txt}
{com}. 
. qui graph save "graph 8b COVID-19 daily deaths and cases timing, raw, WHO regions wo GLOBAL, Johns Hopkins.gph", replace
{txt}
{com}. qui graph export "graph 8b COVID-19 daily deaths and cases timing, raw, WHO regions wo GLOBAL, Johns Hopkins.pdf", replace
{txt}
{com}. 
. 
. 
. 
. 
. *
. 
. 
. 
. 
. 
. view "log CovidVisualizedGlobal JOHN.smcl"
{txt}
{com}. 
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/Users/farshadpourmalek/Downloads/CovidVisualizedGlobal-main/20220104/code/JOHN/log CovidVisualizedGlobal JOHN.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 5 Jan 2022, 16:58:32
{txt}{.-}
{smcl}
{txt}{sf}{ul off}