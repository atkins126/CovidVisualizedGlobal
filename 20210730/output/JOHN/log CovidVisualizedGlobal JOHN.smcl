{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/Users/farshadpourmalek/Downloads/CovidVisualizedGlobal-main/20210730/code/JOHN/log CovidVisualizedGlobal JOHN.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 1 Aug 2021, 16:25:53
{txt}
{com}. 
. ***************************************************************************
. * This is "do CovidVisualizedGlobal JOHN.do"
. 
. * Project: Combine and visualize international periodically updating 
. * estimates of COVID-19 at the global level (CovidVisualizedGlobal)
. * Person: Farshad Pourmalek pourmalek_farshad at yahoo dot com
. * Time (initial): 2021-04-14
. ***************************************************************************
. 
. 
. 
. 
. ****************************************
. 
. * get Johns Hopkins data for deaths
. 
. 
. import delimited ///
> "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv" ///
> , clear varnames(1) colrange(1:2)
{res}{text}(2 vars, 279 obs)

{com}. 
. save "time_series_covid19_deaths_global col 2.dta", replace
{txt}file time_series_covid19_deaths_global col 2.dta saved

{com}. 
. 
. import delimited ///
> "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv" ///
> , clear varnames(1) colrange(5)
{res}{text}(557 vars, 279 obs)

{com}. 
. save "time_series_covid19_deaths_global col 5 on.dta", replace
{txt}file time_series_covid19_deaths_global col 5 on.dta saved

{com}. 
. 
. use "time_series_covid19_deaths_global col 2.dta", clear 
{txt}
{com}. 
. merge 1:1 _n using "time_series_covid19_deaths_global col 5 on.dta"
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             279{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. drop _merge
{txt}
{com}. 
. order provincestate countryregion, last
{txt}
{com}. 
. count
  {res}279
{txt}
{com}. 
. qui destring v*, replace
{txt}
{com}. 
. collapse (sum) v*, by(countryregion) // sum to add subnational estimates to national level and omit subnational estimates
{txt}
{com}. 
. count
  {res}195
{txt}
{com}. 
. replace countryregion = trim(countryregion)
{txt}(0 real changes made)

{com}. 
. rename countryregion loc_grand_name
{res}{txt}
{com}. 
. label var loc_grand_name loc_grand_name
{txt}
{com}. 
. isid loc_grand_name
{txt}
{com}. 
. 
. 
. * gen global sum
. 
. drop loc_grand_name
{txt}
{com}.  
. collapse (sum) *
{txt}
{com}. 
. gen loc_grand_name = "global"
{txt}
{com}.   
. 
. gen counter = _n
{txt}
{com}. 
. reshape long v, i(counter) 
{txt}(note: j

Data{col 36}wide{col 43}->{col 48}long
{hline 77}
Number of obs.                 {res}       1   {txt}->{res}     557
{txt}Number of variables            {res}     559   {txt}->{res}       4
{txt}j variable (557 values)                   ->   {res}_j
{txt}xij variables:
                         {res}v1 v2 ... v557   {txt}->   {res}v
{txt}{hline 77}

{com}. 
. drop counter 
{txt}
{com}. 
. codebook _j

{txt}{hline}
{res}_j{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric ({res}int{txt})

{col 18}range:  [{res}1{txt},{res}557{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}557{col 51}{txt}missing .:  {res}0{txt}/{res}557

{txt}{col 19}mean:{res}{col 26}     279
{txt}{col 15}std. dev:{res}{col 26} 160.936

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}      56{col 37}     140{col 47}     279{col 57}     418{col 67}     502
{txt}
{com}. 
. 
. * JOHN starts from 22 Jan 2020
. 
. gen date = date("22 Jan 2020", "DMY")
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. bysort loc_grand_name: replace date = date + _j - 1
{txt}(556 real changes made)

{com}. 
. format date %td
{txt}
{com}. 
. codebook date

{txt}{hline}
{res}date{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric daily date ({res}float{txt})

{col 18}range:  [{res}21936{txt},{res}22492{txt}]{col 55}units:  {res}1
{col 8}{txt}or equivalently:  [{res}22jan2020{txt},{res}31jul2021{txt}]{col 55}units:  {res}days
{col 10}{txt}unique values:  {res}557{col 51}{txt}missing .:  {res}0{txt}/{res}557

{txt}{col 19}mean:{res}{col 26}   22214{txt} = {res}26oct2020{txt}
{col 15}std. dev:{res}{col 26} 160.936

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}   21991{col 37}   22075{col 47}   22214{col 57}   22353{col 67}   22437
{col 26}17mar2020{col 36}09jun2020{col 46}26oct2020{col 56}14mar2021{col 66}06jun2021
{txt}
{com}. 
. order date 
{txt}
{com}. 
. rename v TotDeaMeRaA00S00
{res}{txt}
{com}. 
. label var TotDeaMeRaA00S00 "Total deaths raw A00 JOHN"
{txt}
{com}. 
. destring TotDeaMeRaA00S00, replace
{txt}TotDeaMeRaA00S00 already numeric; no {res}replace
{txt}
{com}. 
. gen DayDeaMeRaA00S00 =  TotDeaMeRaA00S00[_n] - TotDeaMeRaA00S00[_n-1]
{txt}(1 missing value generated)

{com}. 
. label var DayDeaMeRaA00S00 "Daily deaths raw A00 JOHN"
{txt}
{com}. 
. replace DayDeaMeRaA00S00 = TotDeaMeRaA00S00 if _j == 1
{txt}(1 real change made)

{com}. 
. drop _j 
{txt}
{com}. 
. order loc_grand_name date DayDeaMeRaA00S00 TotDeaMeRaA00S00             
{txt}
{com}.                                         
. sort date
{txt}
{com}. 
. save "global JOHN deaths.dta", replace
{txt}file global JOHN deaths.dta saved

{com}. 
. 
. 
. 
. ****************************************
. 
. * get Johns Hopkins data for cases
. 
. 
. import delimited ///
> "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv" ///
> , clear varnames(1) colrange(1:2)
{res}{text}(2 vars, 279 obs)

{com}. 
. save "time_series_covid19_confirmed_global col 2.dta", replace
{txt}file time_series_covid19_confirmed_global col 2.dta saved

{com}. 
. 
. import delimited ///
> "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv" ///
> , clear varnames(1) colrange(5)
{res}{text}(557 vars, 279 obs)

{com}. 
. save "time_series_covid19_confirmed_global col 5 on.dta", replace
{txt}file time_series_covid19_confirmed_global col 5 on.dta saved

{com}. 
. 
. use "time_series_covid19_confirmed_global col 2.dta", clear 
{txt}
{com}. 
. merge 1:1 _n using "time_series_covid19_confirmed_global col 5 on.dta"
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             279{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. drop _merge
{txt}
{com}. 
. order provincestate countryregion, last
{txt}
{com}. 
. count
  {res}279
{txt}
{com}. 
. qui destring v*, replace
{txt}
{com}. 
. collapse (sum) v*, by(countryregion) // sum to add subnational estimates to national level and omit subnational estimates
{txt}
{com}. 
. count
  {res}195
{txt}
{com}. 
. replace countryregion = trim(countryregion)
{txt}(0 real changes made)

{com}. 
. rename countryregion loc_grand_name
{res}{txt}
{com}. 
. label var loc_grand_name loc_grand_name
{txt}
{com}. 
. isid loc_grand_name
{txt}
{com}. 
. 
. 
. * gen global sum
. 
. drop loc_grand_name
{txt}
{com}.  
. collapse (sum) *
{txt}
{com}. 
. gen loc_grand_name = "global"
{txt}
{com}.   
. 
. gen counter = _n
{txt}
{com}. 
. reshape long v, i(counter) 
{txt}(note: j

Data{col 36}wide{col 43}->{col 48}long
{hline 77}
Number of obs.                 {res}       1   {txt}->{res}     557
{txt}Number of variables            {res}     559   {txt}->{res}       4
{txt}j variable (557 values)                   ->   {res}_j
{txt}xij variables:
                         {res}v1 v2 ... v557   {txt}->   {res}v
{txt}{hline 77}

{com}. 
. drop counter 
{txt}
{com}. 
. codebook _j

{txt}{hline}
{res}_j{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric ({res}int{txt})

{col 18}range:  [{res}1{txt},{res}557{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}557{col 51}{txt}missing .:  {res}0{txt}/{res}557

{txt}{col 19}mean:{res}{col 26}     279
{txt}{col 15}std. dev:{res}{col 26} 160.936

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}      56{col 37}     140{col 47}     279{col 57}     418{col 67}     502
{txt}
{com}. 
. 
. * JOHN starts from 22 Jan 2020
. 
. gen date = date("22 Jan 2020", "DMY")
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. bysort loc_grand_name: replace date = date + _j - 1
{txt}(556 real changes made)

{com}. 
. format date %td
{txt}
{com}. 
. codebook date

{txt}{hline}
{res}date{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric daily date ({res}float{txt})

{col 18}range:  [{res}21936{txt},{res}22492{txt}]{col 55}units:  {res}1
{col 8}{txt}or equivalently:  [{res}22jan2020{txt},{res}31jul2021{txt}]{col 55}units:  {res}days
{col 10}{txt}unique values:  {res}557{col 51}{txt}missing .:  {res}0{txt}/{res}557

{txt}{col 19}mean:{res}{col 26}   22214{txt} = {res}26oct2020{txt}
{col 15}std. dev:{res}{col 26} 160.936

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}   21991{col 37}   22075{col 47}   22214{col 57}   22353{col 67}   22437
{col 26}17mar2020{col 36}09jun2020{col 46}26oct2020{col 56}14mar2021{col 66}06jun2021
{txt}
{com}. 
. order date 
{txt}
{com}. 
. rename v TotCasMeRaA00S00
{res}{txt}
{com}. 
. label var TotCasMeRaA00S00 "Total cases raw A00 JOHN"
{txt}
{com}. 
. destring TotCasMeRaA00S00, replace
{txt}TotCasMeRaA00S00 already numeric; no {res}replace
{txt}
{com}. 
. gen DayCasMeRaA00S00 =  TotCasMeRaA00S00[_n] - TotCasMeRaA00S00[_n-1]
{txt}(1 missing value generated)

{com}. 
. label var DayCasMeRaA00S00 "Daily cases raw A00 JOHN"
{txt}
{com}. 
. replace DayCasMeRaA00S00 = TotCasMeRaA00S00 if _j == 1
{txt}(1 real change made)

{com}. 
. drop _j 
{txt}
{com}. 
. order loc_grand_name date DayCasMeRaA00S00 TotCasMeRaA00S00             
{txt}
{com}.                                         
. sort date
{txt}
{com}. 
. save "global JOHN cases.dta", replace
{txt}file global JOHN cases.dta saved

{com}. 
. 
. 
. 
. 
. ****************************************
. 
. * get Johns Hopkins data for recoverd
. 
. 
. import delimited ///
> "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv" ///
> , clear varnames(1) colrange(1:2)
{res}{text}(2 vars, 264 obs)

{com}. 
. save "time_series_covid19_recovered_global col 2.dta", replace
{txt}file time_series_covid19_recovered_global col 2.dta saved

{com}. 
. 
. import delimited ///
> "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv" ///
> , clear varnames(1) colrange(5)
{res}{text}(557 vars, 264 obs)

{com}. 
. save "time_series_covid19_recovered_global col 5 on.dta", replace
{txt}file time_series_covid19_recovered_global col 5 on.dta saved

{com}. 
. 
. use "time_series_covid19_recovered_global col 2.dta", clear 
{txt}
{com}. 
. merge 1:1 _n using "time_series_covid19_recovered_global col 5 on.dta"
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             264{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. drop _merge
{txt}
{com}. 
. order provincestate countryregion, last
{txt}
{com}. 
. count
  {res}264
{txt}
{com}. 
. qui destring v*, replace
{txt}
{com}. 
. collapse (sum) v*, by(countryregion) // sum to add subnational estimates to national level and omit subnational estimates
{txt}
{com}. 
. count
  {res}195
{txt}
{com}. 
. replace countryregion = trim(countryregion)
{txt}(0 real changes made)

{com}. 
. rename countryregion loc_grand_name
{res}{txt}
{com}. 
. label var loc_grand_name loc_grand_name
{txt}
{com}. 
. isid loc_grand_name
{txt}
{com}. 
. 
. 
. * gen global sum
. 
. drop loc_grand_name
{txt}
{com}.  
. collapse (sum) *
{txt}
{com}. 
. gen loc_grand_name = "global"
{txt}
{com}.   
. 
. gen counter = _n
{txt}
{com}. 
. reshape long v, i(counter) 
{txt}(note: j

Data{col 36}wide{col 43}->{col 48}long
{hline 77}
Number of obs.                 {res}       1   {txt}->{res}     557
{txt}Number of variables            {res}     559   {txt}->{res}       4
{txt}j variable (557 values)                   ->   {res}_j
{txt}xij variables:
                         {res}v1 v2 ... v557   {txt}->   {res}v
{txt}{hline 77}

{com}. 
. drop counter 
{txt}
{com}. 
. codebook _j

{txt}{hline}
{res}_j{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric ({res}int{txt})

{col 18}range:  [{res}1{txt},{res}557{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}557{col 51}{txt}missing .:  {res}0{txt}/{res}557

{txt}{col 19}mean:{res}{col 26}     279
{txt}{col 15}std. dev:{res}{col 26} 160.936

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}      56{col 37}     140{col 47}     279{col 57}     418{col 67}     502
{txt}
{com}. 
. 
. * JOHN starts from 22 Jan 2020
. 
. gen date = date("22 Jan 2020", "DMY")
{txt}
{com}. 
. sort loc_grand_name date
{txt}
{com}. 
. bysort loc_grand_name: replace date = date + _j - 1
{txt}(556 real changes made)

{com}. 
. format date %td
{txt}
{com}. 
. codebook date

{txt}{hline}
{res}date{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric daily date ({res}float{txt})

{col 18}range:  [{res}21936{txt},{res}22492{txt}]{col 55}units:  {res}1
{col 8}{txt}or equivalently:  [{res}22jan2020{txt},{res}31jul2021{txt}]{col 55}units:  {res}days
{col 10}{txt}unique values:  {res}557{col 51}{txt}missing .:  {res}0{txt}/{res}557

{txt}{col 19}mean:{res}{col 26}   22214{txt} = {res}26oct2020{txt}
{col 15}std. dev:{res}{col 26} 160.936

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}   21991{col 37}   22075{col 47}   22214{col 57}   22353{col 67}   22437
{col 26}17mar2020{col 36}09jun2020{col 46}26oct2020{col 56}14mar2021{col 66}06jun2021
{txt}
{com}. 
. order date 
{txt}
{com}. 
. rename v TotRecMeRaA00S00
{res}{txt}
{com}. 
. label var TotRecMeRaA00S00 "Total recovered raw A00 JOHN"
{txt}
{com}. 
. destring TotRecMeRaA00S00, replace
{txt}TotRecMeRaA00S00 already numeric; no {res}replace
{txt}
{com}. 
. gen DayRecMeRaA00S00 =  TotRecMeRaA00S00[_n] - TotRecMeRaA00S00[_n-1]
{txt}(1 missing value generated)

{com}. 
. label var DayRecMeRaA00S00 "Daily recovered raw A00 JOHN"
{txt}
{com}. 
. replace DayRecMeRaA00S00 = TotRecMeRaA00S00 if _j == 1
{txt}(1 real change made)

{com}. 
. drop _j 
{txt}
{com}. 
. order loc_grand_name date DayRecMeRaA00S00 TotRecMeRaA00S00             
{txt}
{com}.                                         
. sort date
{txt}
{com}. 
. save "global JOHN recovered.dta", replace
{txt}file global JOHN recovered.dta saved

{com}. 
. 
. 
. 
. 
. 
. ****************************************
. 
. * merge deaths and cases and recovered
. 
. use "global JOHN deaths.dta", clear 
{txt}
{com}. 
. merge 1:1 date using "global JOHN Cases.dta"
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             557{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. drop _merge
{txt}
{com}. 
. merge 1:1 date using "global JOHN recovered.dta"
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}             557{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. drop _merge
{txt}
{com}. 
. *
. 
. * gen cfr
. 
. gen DayCfrMeRaA00S00 = 100 * DayDeaMeRaA00S00 / DayCasMeRaA00S00
{txt}
{com}. 
. label var DayCfrMeRaA00S00 "Daily CFR raw JOHN"
{txt}
{com}. 
. *
. 
. 
. 
. 
. 
. ****** add obs 01 Jan 2020 to 21 Jan 2020 for better graphing
. 
. 
. expand 22 in 1
{txt}(21 observations created)

{com}. 
. sort date
{txt}
{com}. 
. rename date date_original 
{res}{txt}
{com}. 
. gen date = .
{txt}(578 missing values generated)

{com}. 
. replace date = td(01Jan2020) in 1
{txt}(1 real change made)

{com}. 
. replace date = date[_n-1] + 1 in 2/l
{txt}(577 real changes made)

{com}. 
. format date %tdDDMonCCYY
{txt}
{com}. 
. codebook date

{txt}{hline}
{res}date{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric daily date ({res}float{txt})

{col 18}range:  [{res}21915{txt},{res}22492{txt}]{col 55}units:  {res}1
{col 8}{txt}or equivalently:  [{res}01jan2020{txt},{res}31jul2021{txt}]{col 55}units:  {res}days
{col 10}{txt}unique values:  {res}578{col 51}{txt}missing .:  {res}0{txt}/{res}578

{txt}{col 19}mean:{res}{col 26} 22203.5{txt} = {res}15oct2020{txt} (+ 12 hours)
{col 15}std. dev:{res}{col 26} 166.999

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}   21972{col 37}   22059{col 47} 22203.5{col 57}   22348{col 67}   22435
{col 26}27feb2020{col 36}24may2020{col 46}15oct2020{col 56}09mar2021{col 66}04jun2021
{txt}
{com}. 
. drop date_original
{txt}
{com}. 
. order date
{txt}
{com}. 
. *
. 
. 
. 
. *************************
. 
. * to visualize timing of deaths and cases peaks
. 
. summ DayDeaMeRaA00S00 

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
DayDeaMeR~00 {c |}{res}        578    7297.128    4374.439          1      20808
{txt}
{com}. gen DayDeMMeRaA00S00 = r(mean)
{txt}
{com}. label var DayDeMMeRaA00S00 "Daily deaths raw mean JOHN DayDeM"
{txt}
{com}. 
. summ DayCasMeRaA00S00 

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
DayCasMeR~00 {c |}{res}        578    342359.7    249110.5         98    1498044
{txt}
{com}. gen DayCaMMeRaA00S00 = r(mean)
{txt}
{com}. label var DayCaMMeRaA00S00 "Daily cases raw mean JOHN DayCaM"
{txt}
{com}. 
. gen DayCbDMeRaA00S00 = DayCaMMeRaA00S00 / DayDeMMeRaA00S00
{txt}
{com}. label var DayCbDMeRaA00S00 "Daily cases mean div by daily deaths mean JOHN DayCbD"
{txt}
{com}. summ DayCbDMeRaA00S00 

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
DayCbDMeR~00 {c |}{res}        578    46.91705           0   46.91705   46.91705
{txt}
{com}. 
. gen DayDeaMeRaA00multip = DayDeaMeRaA00S00 * DayCbDMeRaA00S00 
{txt}
{com}. label var DayDeaMeRaA00multip "Daily deaths scaled (times means of cases by deaths) only for visualization JOHN"
{txt}
{com}. summ DayDeaMeRaA00multip

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
DayDeaMeRa~p {c |}{res}        578    342359.7    205235.8   46.91705   976249.9
{txt}
{com}. 
. 
. 
. 
. ******************
. 
. * smooth 
. 
. tsset date, daily   
{res}{txt}{col 9}time variable:  {res}{col 25}date, 01Jan2020 to 31Jul2021
{txt}{col 17}delta:  {res}1 day
{txt}
{com}. 
. 
. tssmooth ma DayDeaMeRaA00S00_window = DayDeaMeRaA00S00 if DayDeaMeRaA00S00 >= 0, window(3 1 3)
{txt}The smoother applied was
{res}{p 5 5 5}(1/7)*[x(t-3) + x(t-2) + x(t-1) + 1*x(t) + x(t+1) + x(t+2) + x(t+3)]; x(t)= DayDeaMeRaA00S00 {p_end}
{txt}
{com}. 
. tssmooth ma DayDeaMeSmA00S00 = DayDeaMeRaA00S00_window, weights( 1 2 3 <4> 3 2 1) replace
{txt}The smoother applied was
{res}{p 5 5 5}(1/16)*[1*x(t-3) + 2*x(t-2) + 3*x(t-1) + 4*x(t) + 3*x(t+1) + 2*x(t+2) + ...; x(t)= DayDeaMeRaA00S00_window
{txt}
{smcl}
{com}. 
. label var DayDeaMeSmA00S00 "Daily deaths smooth A00 JOHN"
{txt}
{com}. 
. drop DayDeaMeRaA00S00_window
{txt}
{com}. 
. 
. tssmooth ma DayCasMeRaA00S00_window = DayCasMeRaA00S00 if DayCasMeRaA00S00 >= 0, window(3 1 3)
{txt}The smoother applied was
{res}{p 5 5 5}(1/7)*[x(t-3) + x(t-2) + x(t-1) + 1*x(t) + x(t+1) + x(t+2) + x(t+3)]; x(t)= DayCasMeRaA00S00 {p_end}
{txt}
{com}. 
. tssmooth ma DayCasMeSmA00S00 = DayCasMeRaA00S00_window, weights( 1 2 3 <4> 3 2 1) replace
{txt}The smoother applied was
{res}{p 5 5 5}(1/16)*[1*x(t-3) + 2*x(t-2) + 3*x(t-1) + 4*x(t) + 3*x(t+1) + 2*x(t+2) + ...; x(t)= DayCasMeRaA00S00_window
{txt}
{smcl}
{com}. 
. label var DayCasMeSmA00S00 "Daily cases smooth A00 JOHN"
{txt}
{com}. 
. drop DayCasMeRaA00S00_window
{txt}
{com}. 
. 
. tssmooth ma DayCfrMeRaA00S00_window = DayCfrMeRaA00S00 if DayCfrMeRaA00S00 >= 0, window(3 1 3)
{txt}The smoother applied was
{res}{p 5 5 5}(1/7)*[x(t-3) + x(t-2) + x(t-1) + 1*x(t) + x(t+1) + x(t+2) + x(t+3)]; x(t)= DayCfrMeRaA00S00 {p_end}
{txt}
{com}. 
. tssmooth ma DayCfrMeSmA00S00 = DayCfrMeRaA00S00_window, weights( 1 2 3 <4> 3 2 1) replace
{txt}The smoother applied was
{res}{p 5 5 5}(1/16)*[1*x(t-3) + 2*x(t-2) + 3*x(t-1) + 4*x(t) + 3*x(t+1) + 2*x(t+2) + ...; x(t)= DayCfrMeRaA00S00_window
{txt}
{smcl}
{com}. 
. label var DayCfrMeSmA00S00 "Daily CFR smooth A00 JOHN"
{txt}
{com}. 
. drop DayCfrMeRaA00S00_window
{txt}
{com}. 
. 
. 
. tssmooth ma DayRecMeRaA00S00_window = DayRecMeRaA00S00 if DayRecMeRaA00S00 >= 0, window(3 1 3)
{txt}The smoother applied was
{res}{p 5 5 5}(1/7)*[x(t-3) + x(t-2) + x(t-1) + 1*x(t) + x(t+1) + x(t+2) + x(t+3)]; x(t)= DayRecMeRaA00S00 {p_end}
{txt}
{com}. 
. tssmooth ma DayRecMeSmA00S00 = DayRecMeRaA00S00_window, weights( 1 2 3 <4> 3 2 1) replace
{txt}The smoother applied was
{res}{p 5 5 5}(1/16)*[1*x(t-3) + 2*x(t-2) + 3*x(t-1) + 4*x(t) + 3*x(t+1) + 2*x(t+2) + ...; x(t)= DayRecMeRaA00S00_window
{txt}
{smcl}
{com}. 
. label var DayRecMeSmA00S00 "Daily recovered smooth A00 JOHN"
{txt}
{com}. 
. drop DayRecMeRaA00S00_window
{txt}
{com}. 
. 
. 
. tssmooth ma DayDeaMeRaA00multip_window = DayDeaMeRaA00multip if DayDeaMeRaA00multip >= 0, window(3 1 3)
{txt}The smoother applied was
{res}{p 5 5 5}(1/7)*[x(t-3) + x(t-2) + x(t-1) + 1*x(t) + x(t+1) + x(t+2) + x(t+3)]; x(t)= DayDeaMeRaA00multip {p_end}
{txt}
{com}. 
. tssmooth ma DayDeaMeSmA00multip = DayDeaMeRaA00multip_window, weights( 1 2 3 <4> 3 2 1) replace
{txt}The smoother applied was
{res}{p 5 5 5}(1/16)*[1*x(t-3) + 2*x(t-2) + 3*x(t-1) + 4*x(t) + 3*x(t+1) + 2*x(t+2) + ...; x(t)= DayDeaMeRaA00multip_window
{txt}
{smcl}
{com}. 
. label var DayDeaMeSmA00multip "Daily deaths scaled smooth A00 JOHN"
{txt}
{com}. 
. drop DayDeaMeRaA00multip_window
{txt}
{com}. 
. 
. 
. 
. 
. tsset, clear
{txt}
{com}. 
. 
. 
. 
. 
. 
. 
. ***************************************
. 
. * graphs
. 
. 
. grstyle init
{res}{txt}
{com}. 
. grstyle color background white
{txt}
{com}. 
. 
. 
. 
. * daily deaths
. 
. 
. * adjust x axis ticks from Jan 2020 to this month and avoid globals
. forval i = 1(1)12 {c -(}
{txt}  2{com}.         local date2020 = mdy(`i', 1, 2020)
{txt}  3{com}.         local dates2020 `dates2020' `date2020'
{txt}  4{com}. {c )-}
{txt}
{com}. local wanted : di %tdNN daily("$S_DATE", "DMY")
{res}{txt}
{com}. forval i = 1(1)`wanted' {c -(}
{txt}  2{com}.         local date2021 = mdy(`i', 1, 2021)
{txt}  3{com}.         local dates2021 `dates2021' `date2021'
{txt}  4{com}. {c )-}
{txt}
{com}. *
. 
. 
. 
. twoway ///
> (line DayDeaMeRaA00S00 date, sort lcolor(gray)) ///
> (line DayDeaMeSmA00S00 date, sort lwidth(thick) lcolor(red)) ///
> , xtitle(Date) xlabel(`dates2020' `dates2021', format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Daily deaths) title("COVID-19 daily deaths, global, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> legend(order(1 "Raw" 2 "Smoothed") size(small)) 
{res}{txt}
{com}. 
. graph save "graph 1 COVID-19 daily deaths, global, Johns Hopkins.gph", replace
{res}{txt}(file graph 1 COVID-19 daily deaths, global, Johns Hopkins.gph saved)

{com}. graph export "graph 1 COVID-19 daily deaths, global, Johns Hopkins.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/CovidVisualizedGlobal-main/20210730/code/JOHN/graph 1 COVID-19 daily deaths, global, Johns Hopkins.pdf written in PDF format)

{com}. 
. 
. 
. 
. 
. * daily cases 
. 
. 
. forval i = 1(1)12 {c -(}
{txt}  2{com}.         local date2020 = mdy(`i', 1, 2020)
{txt}  3{com}.         local dates2020 `dates2020' `date2020'
{txt}  4{com}. {c )-}
{txt}
{com}. local wanted : di %tdNN daily("$S_DATE", "DMY")
{res}{txt}
{com}. forval i = 1(1)`wanted' {c -(}
{txt}  2{com}.         local date2021 = mdy(`i', 1, 2021)
{txt}  3{com}.         local dates2021 `dates2021' `date2021'
{txt}  4{com}. {c )-}
{txt}
{com}. *
. 
. 
. twoway ///
> (line DayCasMeRaA00S00 date, sort lcolor(gray)) ///
> (line DayCasMeSmA00S00 date, sort lwidth(thick) lcolor(red)) ///
> , xtitle(Date) xlabel(`dates2020' `dates2021', format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Daily cases) title("COVID-19 daily cases, global, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> legend(order(1 "Raw" 2 "Smoothed") size(small)) 
{res}{txt}
{com}. 
. 
. graph save "graph 2 COVID-19 daily cases, global, Johns Hopkins.gph", replace
{res}{txt}(file graph 2 COVID-19 daily cases, global, Johns Hopkins.gph saved)

{com}. graph export "graph 2 COVID-19 daily cases, global, Johns Hopkins.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/CovidVisualizedGlobal-main/20210730/code/JOHN/graph 2 COVID-19 daily cases, global, Johns Hopkins.pdf written in PDF format)

{com}. 
. 
. 
. 
. 
. * total deaths
. 
. forval i = 1(1)12 {c -(}
{txt}  2{com}.         local date2020 = mdy(`i', 1, 2020)
{txt}  3{com}.         local dates2020 `dates2020' `date2020'
{txt}  4{com}. {c )-}
{txt}
{com}. local wanted : di %tdNN daily("$S_DATE", "DMY")
{res}{txt}
{com}. forval i = 1(1)`wanted' {c -(}
{txt}  2{com}.         local date2021 = mdy(`i', 1, 2021)
{txt}  3{com}.         local dates2021 `dates2021' `date2021'
{txt}  4{com}. {c )-}
{txt}
{com}. *
. 
. 
. twoway ///
> (line TotDeaMeRaA00S00 date, sort lcolor(black)) ///
> , xtitle(Date) xlabel(`dates2020' `dates2021', format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Total deaths) title("COVID-19 total deaths, global, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) 
{res}{txt}
{com}. 
. graph save "graph 3 COVID-19 total deaths, global, Johns Hopkins.gph", replace
{res}{txt}(file graph 3 COVID-19 total deaths, global, Johns Hopkins.gph saved)

{com}. graph export "graph 3 COVID-19 total deaths, global, Johns Hopkins.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/CovidVisualizedGlobal-main/20210730/code/JOHN/graph 3 COVID-19 total deaths, global, Johns Hopkins.pdf written in PDF format)

{com}. 
. 
. 
. 
. 
. * total cases 
. 
. forval i = 1(1)12 {c -(}
{txt}  2{com}.         local date2020 = mdy(`i', 1, 2020)
{txt}  3{com}.         local dates2020 `dates2020' `date2020'
{txt}  4{com}. {c )-}
{txt}
{com}. local wanted : di %tdNN daily("$S_DATE", "DMY")
{res}{txt}
{com}. forval i = 1(1)`wanted' {c -(}
{txt}  2{com}.         local date2021 = mdy(`i', 1, 2021)
{txt}  3{com}.         local dates2021 `dates2021' `date2021'
{txt}  4{com}. {c )-}
{txt}
{com}. *
. 
. 
. twoway ///
> (line TotCasMeRaA00S00 date, sort lcolor(black)) ///
> , xtitle(Date) xlabel(`dates2020' `dates2021', format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%12.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Total cases) title("COVID-19 total cases, global, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) 
{res}{txt}
{com}. 
. 
. 
. graph save "graph 4 COVID-19 total cases, global, Johns Hopkins.gph", replace
{res}{txt}(file graph 4 COVID-19 total cases, global, Johns Hopkins.gph saved)

{com}. graph export "graph 4 COVID-19 total cases, global, Johns Hopkins.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/CovidVisualizedGlobal-main/20210730/code/JOHN/graph 4 COVID-19 total cases, global, Johns Hopkins.pdf written in PDF format)

{com}. 
. 
. 
. 
. 
. * daily cfr 
. 
. 
. forval i = 1(1)12 {c -(}
{txt}  2{com}.         local date2020 = mdy(`i', 1, 2020)
{txt}  3{com}.         local dates2020 `dates2020' `date2020'
{txt}  4{com}. {c )-}
{txt}
{com}. local wanted : di %tdNN daily("$S_DATE", "DMY")
{res}{txt}
{com}. forval i = 1(1)`wanted' {c -(}
{txt}  2{com}.         local date2021 = mdy(`i', 1, 2021)
{txt}  3{com}.         local dates2021 `dates2021' `date2021'
{txt}  4{com}. {c )-}
{txt}
{com}. *
. 
. 
. 
. twoway ///
> (line DayCfrMeRaA00S00 date, sort lcolor(gray)) ///
> (line DayCfrMeSmA00S00 date, sort lwidth(thick) lcolor(red)) ///
> , xtitle(Date) xlabel(`dates2020' `dates2021', format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Daily CFR) title("COVID-19 daily CFR, global, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> legend(order(1 "Raw" 2 "Smoothed") size(small)) 
{res}{txt}
{com}. 
. 
. graph save "graph 5 COVID-19 daily CFR, global, Johns Hopkins.gph", replace
{res}{txt}(file graph 5 COVID-19 daily CFR, global, Johns Hopkins.gph saved)

{com}. graph export "graph 5 COVID-19 daily CFR, global, Johns Hopkins.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/CovidVisualizedGlobal-main/20210730/code/JOHN/graph 5 COVID-19 daily CFR, global, Johns Hopkins.pdf written in PDF format)

{com}. 
. 
. 
. 
. 
. * daily cfr after 01dec2020
. 
. 
. 
. forval i = 1(1)12 {c -(}
{txt}  2{com}.         local date2020 = mdy(`i', 1, 2020)
{txt}  3{com}.         local dates2020 `dates2020' `date2020'
{txt}  4{com}. {c )-}
{txt}
{com}. local wanted : di %tdNN daily("$S_DATE", "DMY")
{res}{txt}
{com}. forval i = 1(1)`wanted' {c -(}
{txt}  2{com}.         local date2021 = mdy(`i', 1, 2021)
{txt}  3{com}.         local dates2021 `dates2021' `date2021'
{txt}  4{com}. {c )-}
{txt}
{com}. *
. 
. 
. 
. twoway ///
> (line DayCfrMeRaA00S00 date, sort lcolor(gray)) ///
> (line DayCfrMeSmA00S00 date, sort lwidth(thick) lcolor(red)) ///
> if date >= td(01jan2021) ///
> , xtitle(Date) xlabel(, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.1fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Daily CFR) title("COVID-19 daily CFR, global, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> subtitle("after 2021-01-01", size(small)) ///
> legend(order(1 "Raw" 2 "Smoothed") size(small)) 
{res}{txt}
{com}. 
. 
. 
. graph save "graph 6 COVID-19 daily CFR, global, Johns Hopkins, 01dec2020 on.gph", replace
{res}{txt}(file graph 6 COVID-19 daily CFR, global, Johns Hopkins, 01dec2020 on.gph saved)

{com}. graph export "graph 6 COVID-19 daily CFR, global, Johns Hopkins, 01dec2020 on.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/CovidVisualizedGlobal-main/20210730/code/JOHN/graph 6 COVID-19 daily CFR, global, Johns Hopkins, 01dec2020 on.pdf written in PDF format)

{com}. 
. 
. 
. 
. 
. * visualize timing of deaths and cases peaks
. 
. 
. twoway ///
> (line DayCasMeRaA00S00 date, sort lcolor(blue)) ///
> (line DayDeaMeRaA00S00 date, sort lcolor(red)) ///
> (line DayDeaMeRaA00multip date, sort lpattern(tight_dot) lcolor(red)) ///
> if date > td(01jan2020)  ///
> , xtitle(Date) xlabel(#14, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Daily cases and scaled deaths) title("COVID-19 daily cases and deaths, raw, global, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none)))  ///
> legend(order(1 "Daily cases" 2 "Daily deaths" 3 "Daily deaths scaled") rows(1)) ///
> subtitle("Daily deaths scaled (times means of cases by deaths) only for visualization", size(small))
{res}{txt}
{com}. 
. 
. graph save "graph 7 COVID-19 daily deaths and cases timing, raw, global, Johns Hopkins.gph", replace
{res}{txt}(file graph 7 COVID-19 daily deaths and cases timing, raw, global, Johns Hopkins.gph saved)

{com}. graph export "graph 7 COVID-19 daily deaths and cases timing, raw, global, Johns Hopkins.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/CovidVisualizedGlobal-main/20210730/code/JOHN/graph 7 COVID-19 daily deaths and cases timing, raw, global, Johns Hopkins.pdf written in PDF format)

{com}. 
. 
. 
. 
. 
. * visualize timing of deaths and cases peaks
. 
. 
. twoway ///
> (line DayCasMeSmA00S00 date, sort lcolor(blue)) ///
> (line DayDeaMeSmA00S00 date, sort lcolor(red)) ///
> (line DayDeaMeSmA00multip date, sort lpattern(tight_dot) lcolor(red)) ///
> if date > td(01jan2020)  ///
> , xtitle(Date) xlabel(#14, format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%9.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Daily cases and scaled deaths) title("COVID-19 daily cases and deaths, smooth, global, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none)))  ///
> legend(order(1 "Daily cases" 2 "Daily deaths" 3 "Daily deaths scaled") rows(1)) ///
> subtitle("Daily deaths scaled (times means of cases by deaths) only for visualization", size(small))
{res}{txt}
{com}. 
. 
. graph save "graph 8 COVID-19 daily deaths and cases timing, smooth, global, Johns Hopkins.gph", replace
{res}{txt}(file graph 8 COVID-19 daily deaths and cases timing, smooth, global, Johns Hopkins.gph saved)

{com}. graph export "graph 8 COVID-19 daily deaths and cases timing, smooth, global, Johns Hopkins.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/CovidVisualizedGlobal-main/20210730/code/JOHN/graph 8 COVID-19 daily deaths and cases timing, smooth, global, Johns Hopkins.pdf written in PDF format)

{com}. 
. 
. 
. 
. 
. * daily recovered
. 
. 
. * adjust x axis ticks from Jan 2020 to this month and avoid globals
. forval i = 1(1)12 {c -(}
{txt}  2{com}.         local date2020 = mdy(`i', 1, 2020)
{txt}  3{com}.         local dates2020 `dates2020' `date2020'
{txt}  4{com}. {c )-}
{txt}
{com}. local wanted : di %tdNN daily("$S_DATE", "DMY")
{res}{txt}
{com}. forval i = 1(1)`wanted' {c -(}
{txt}  2{com}.         local date2021 = mdy(`i', 1, 2021)
{txt}  3{com}.         local dates2021 `dates2021' `date2021'
{txt}  4{com}. {c )-}
{txt}
{com}. *
. 
. 
. 
. twoway ///
> (line DayRecMeRaA00S00 date, sort lcolor(gray)) ///
> (line DayRecMeSmA00S00 date, sort lwidth(thick) lcolor(red)) ///
> if date >= td(01jan2020) & DayRecMeRaA00S00 >=0 ///
> , xtitle(Date) xlabel(`dates2020' `dates2021', format(%tdYY-NN-DD) labsize(small)) xlabel(, grid) xlabel(, grid) ///
> xlabel(, angle(forty_five)) ylabel(, format(%12.0fc) labsize(small))  ylabel(, labsize(small) angle(forty_five)) ///
> ytitle(Daily recovered) title("COVID-19 daily recovered, global, Johns Hopkins", size(medium)) ///
> xscale(lwidth(vthin) lcolor(gray*.2)) yscale(lwidth(vthin) lcolor(gray*.2)) legend(region(lcolor(none))) legend(bexpand) ///
> legend(order(1 "Raw" 2 "Smoothed") size(small)) 
{res}{txt}
{com}. 
. graph save "graph 8 COVID-19 daily recovered, global, Johns Hopkins.gph", replace
{res}{txt}(file graph 8 COVID-19 daily recovered, global, Johns Hopkins.gph saved)

{com}. graph export "graph 8 COVID-19 daily recovered, global, Johns Hopkins.pdf", replace
{txt}(file /Users/farshadpourmalek/Downloads/CovidVisualizedGlobal-main/20210730/code/JOHN/graph 8 COVID-19 daily recovered, global, Johns Hopkins.pdf written in PDF format)

{com}. 
. 
. 
. 
. 
. 
. 
. ****************
. 
. sort date loc_grand_name
{txt}
{com}. 
. order date loc_grand_name
{txt}
{com}. 
. qui compress
{txt}
{com}. 
. 
. save "CovidVisualizedGlobal JOHN.dta", replace
{txt}file CovidVisualizedGlobal JOHN.dta saved

{com}. 
. 
. 
. 
. view "log CovidVisualizedGlobal JOHN.smcl"
{txt}
{com}. 
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/Users/farshadpourmalek/Downloads/CovidVisualizedGlobal-main/20210730/code/JOHN/log CovidVisualizedGlobal JOHN.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 1 Aug 2021, 16:26:27
{txt}{.-}
{smcl}
{txt}{sf}{ul off}